<BSkyCanvas internalhelpfilename="{x:Null}" Title="Stem and Leaf plot" ModelClasses="{x:Null}" StatusTextBoxName="{x:Null}" customsyntax="{x:Null}" EditableComboBoxName="{x:Null}" RPackages="aplpack" CanExecute="True" PrereqCommandString="{x:Null}" CommandString="stem.leaf({{Destination}},{{Value}}, {{StemValue}}, style=c({{Style}}), , trim.outliers={{Trim}},  depths = {{Depths}}, reverse.negative.leaves = {{NegativeLeaves}},  na.rm=TRUE)" dlgsyntax="stem.leaf({{Destination}},{{Value}}, {{StemValue}}, style=c({{Style}}), , trim.outliers={{Trim}},  depths = {{Depths}}, reverse.negative.leaves = {{NegativeLeaves}},  na.rm=TRUE)" Helpfile="{x:Null}" splitProcessing="True" DatasetRequired="True" MenuLocation="{x:Null}" OutputDefinition="{x:Null}" Width="455" Command="False" Height="400" HelpText="&lt;html&gt;&lt;head&gt;&lt;style type=&quot;text/css&quot;&gt;.c0 { color: Black } .c1 { margin: 0px 0px 10px } .c2 { font-weight: bold } &lt;/style&gt;&lt;/head&gt;&lt;body class=&quot;c0&quot;&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;Description&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;stem and leaf display and back to back stem and leaf display&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;Creates a classical (&amp;quot;Tukey-style&amp;quot;) stem and leaf display / back-to-back stem and leaf display.&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;Usage&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;stem.leaf(data, unit, m, Min, Max, rule.line = c(&amp;quot;Dixon&amp;quot;, &amp;quot;Velleman&amp;quot;, &amp;quot;Sturges&amp;quot;),&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;style = c(&amp;quot;Tukey&amp;quot;, &amp;quot;bare&amp;quot;), trim.outliers = TRUE, depths = TRUE,&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;reverse.negative.leaves = TRUE, na.rm = FALSE, printresult = TRUE)&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;stem.leaf.backback(x,y, unit, m, Min, Max, rule.line = c(&amp;quot;Dixon&amp;quot;, &amp;quot;Velleman&amp;quot;,&amp;#160;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;quot;Sturges&amp;quot;), style = c(&amp;quot;Tukey&amp;quot;, &amp;quot;bare&amp;quot;), trim.outliers = TRUE,&amp;#160;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;depths = TRUE, reverse.negative.leaves = TRUE, na.rm = FALSE,&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;printresult=TRUE, show.no.depths = FALSE, add.more.blanks = 0,&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;back.to.back = TRUE)&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;Arguments&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;data: a numeric vector of data&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;x: first dataset for stem.leaf.backback&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;y: first dataset for stem.leaf.backback&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;unit: leaf unit, as a power of 10 (e.g., 100, .01); if unit is missing unit is choosen by stem.leaf.&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;m: number of parts (1, 2, or 5) into which each stem will be separated; if m is missing the number of parts/stem (m) is choosen by stem.leaf.&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;Min: smallest non-outlying value; omit for automatic choice.&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;Max: largest non-outlying value; omit for automatic choice.&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;rule.line: the rule to use for choosing the desired number of lines in the display; &amp;quot;Dixon&amp;quot; = 10*log10(n); &amp;quot;Velleman&amp;quot; = 2*sqrt(n); &amp;quot;Sturges&amp;quot; = 1 + log2(n); the default is &amp;quot;Dixon&amp;quot;.&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;style: &amp;quot;Tukey&amp;quot; (the default) for &amp;quot;Tukey-style&amp;quot; divided stems; &amp;quot;bare&amp;quot; for divided stems that simply repeat the stem digits.&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;trim.outliers: if TRUE (the default), outliers are placed on LO and HI stems.&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;depths: if TRUE (the default), print a column of &amp;quot;depths&amp;quot; to the left of the stems; the depth of the stem containing the median is the stem-count enclosed in parentheses.&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;reverse.negative.leaves: if TRUE (the default), reverse direction the leaves on negative stems (so, e.g., the leaf 9 comes before the leaf 8, etc.).&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;na.rm: if TRUE &amp;quot;NA&amp;quot; values are removed otherwise the number of NAs are counted.&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;printresult: if TRUE output of the stem and leaf display by cat.&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;show.no.depths: if TRUE no depths are printed.&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;add.more.blanks: number of blanks that are added besides the leaves.&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;back.to.back: if FALSE two parallel stem and leaf displays are constructed.&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;Details:&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;Unlike the stem function in the base package, stem.leaf produces classic stem-and-leaf displays, as described in Tukey's Exploratory Data Analysis. The function stem.leaf.backback creates back-to-back stem and leaf displays.&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;Description&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;stem and leaf display and back to back stem and leaf display&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;Creates a classical (&amp;quot;Tukey-style&amp;quot;) stem and leaf display / back-to-back stem and leaf display.&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;Usage&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;stem.leaf(data, unit, m, Min, Max, rule.line = c(&amp;quot;Dixon&amp;quot;, &amp;quot;Velleman&amp;quot;, &amp;quot;Sturges&amp;quot;),&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;style = c(&amp;quot;Tukey&amp;quot;, &amp;quot;bare&amp;quot;), trim.outliers = TRUE, depths = TRUE,&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;reverse.negative.leaves = TRUE, na.rm = FALSE, printresult = TRUE)&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;stem.leaf.backback(x,y, unit, m, Min, Max, rule.line = c(&amp;quot;Dixon&amp;quot;, &amp;quot;Velleman&amp;quot;,&amp;#160;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;quot;Sturges&amp;quot;), style = c(&amp;quot;Tukey&amp;quot;, &amp;quot;bare&amp;quot;), trim.outliers = TRUE,&amp;#160;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;depths = TRUE, reverse.negative.leaves = TRUE, na.rm = FALSE,&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;printresult=TRUE, show.no.depths = FALSE, add.more.blanks = 0,&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;back.to.back = TRUE)&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;Arguments&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;data: a numeric vector of data&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;x: first dataset for stem.leaf.backback&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;y: first dataset for stem.leaf.backback&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;unit: leaf unit, as a power of 10 (e.g., 100, .01); if unit is missing unit is choosen by stem.leaf.&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;m: number of parts (1, 2, or 5) into which each stem will be separated; if m is missing the number of parts/stem (m) is choosen by stem.leaf.&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;Min: smallest non-outlying value; omit for automatic choice.&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;Max: largest non-outlying value; omit for automatic choice.&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;rule.line: the rule to use for choosing the desired number of lines in the display; &amp;quot;Dixon&amp;quot; = 10*log10(n); &amp;quot;Velleman&amp;quot; = 2*sqrt(n); &amp;quot;Sturges&amp;quot; = 1 + log2(n); the default is &amp;quot;Dixon&amp;quot;.&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;style: &amp;quot;Tukey&amp;quot; (the default) for &amp;quot;Tukey-style&amp;quot; divided stems; &amp;quot;bare&amp;quot; for divided stems that simply repeat the stem digits.&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;trim.outliers: if TRUE (the default), outliers are placed on LO and HI stems.&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;depths: if TRUE (the default), print a column of &amp;quot;depths&amp;quot; to the left of the stems; the depth of the stem containing the median is the stem-count enclosed in parentheses.&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;reverse.negative.leaves: if TRUE (the default), reverse direction the leaves on negative stems (so, e.g., the leaf 9 comes before the leaf 8, etc.).&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;na.rm: if TRUE &amp;quot;NA&amp;quot; values are removed otherwise the number of NAs are counted.&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;printresult: if TRUE output of the stem and leaf display by cat.&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;show.no.depths: if TRUE no depths are printed.&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;add.more.blanks: number of blanks that are added besides the leaves.&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;back.to.back: if FALSE two parallel stem and leaf displays are constructed.&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;Details&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;Unlike the stem function in the base package, stem.leaf produces classic stem-and-leaf displays, as described in Tukey's Exploratory Data Analysis. The function stem.leaf.backback creates back-to-back stem and leaf displays.&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;Value&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;The computed stem and leaf display is printed out. Invisibly stem.leaf returns the stem and leaf display as a list containing the elements info (legend), display (stem and leaf display as character vecter), lower (very small values), upper (very large values), depths (vector of depths), stem (stem information as a vector), and leaves (vector of leaves).&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;Examples&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;stem.leaf(co2)&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;stem.leaf.backback(co2[1:120],co2[121:240])&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;stem.leaf.backback(co2[1:120],co2[121:240], back.to.back = FALSE)&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;stem.leaf.backback(co2[1:120],co2[121:240], back.to.back = FALSE,&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;add.more.blanks = 3, show.no.depths = TRUE)&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;stem.leaf.backback(rivers[-(1:30)],rivers[1:30], back.to.back = FALSE, unit=10, m=5,&amp;#160;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;Min=200, Max=900, add.more.blanks = 20, show.no.depths = TRUE) The computed stem and leaf display is printed out. Invisibly stem.leaf returns the stem and leaf display as a list containing the elements info (legend), display (stem and leaf display as character vecter), lower (very small values), upper (very large values), depths (vector of depths), stem (stem information as a vector), and leaves (vector of leaves).&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;Examples&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;stem.leaf(co2)&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;stem.leaf.backback(co2[1:120],co2[121:240])&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;stem.leaf.backback(co2[1:120],co2[121:240], back.to.back = FALSE)&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;stem.leaf.backback(co2[1:120],co2[121:240], back.to.back = FALSE,&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;add.more.blanks = 3, show.no.depths = TRUE)&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;stem.leaf.backback(rivers[-(1:30)],rivers[1:30], back.to.back = FALSE, unit=10, m=5,&amp;#160;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;Min=200, Max=900, add.more.blanks = 20, show.no.depths = TRUE)&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;Package&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;aplpack&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;Help&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;help(stem.leaf, package ='aplpack')&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;" RHelpText="help(stem.leaf)" Background="#FFEEEFFF" xmlns="clr-namespace:BSky.Controls;assembly=BSky.Controls" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation"><BSkySourceList CanExecute="True" Syntax="%%VALUE%%" summaryCtrl="False" PrefixTxt="{x:Null}" SepCharacter="{x:Null}" maxNoOfVariables="" SubstituteSettings="NoPrefix|UseComma" ordlevels="" nomlevels="" Name="Source" AutoVar="False" renderVars="False" Filter="String|Numeric|Date|Logical|Ordinal|Nominal|Scale" Width="170" Height="370" Left="10" Top="23" Enabled="True" OverwriteSettings="{x:Null}" MoveVariables="True" SelectionMode="Extended"  AllowDrop="True" IsEnabled="True" Focusable="True" av:Canvas.Left="10" av:Canvas.Top="23" av:Grid.IsSharedSizeScope="True"><BSkySourceList.SelectionChangeBehaviour><BehaviourCollection Capacity="0" /></BSkySourceList.SelectionChangeBehaviour><BSkySourceList.Template><av:ControlTemplate TargetType="av:ListBox"><av:Border BorderThickness="1,1,1,1" CornerRadius="4,4,4,4" BorderBrush="#FF888888" Background="#FFFFFFFF"><av:ScrollViewer Margin="1,1,1,1" Focusable="False"><av:StackPanel IsItemsHost="True" Margin="0,0,0,0" /></av:ScrollViewer></av:Border></av:ControlTemplate></BSkySourceList.Template><BSkySourceList.Style><av:Style TargetType="av:ListBox"><av:Style.Resources><av:ResourceDictionary /></av:Style.Resources><av:Setter Property="av:UIElement.Effect"><av:Setter.Value><av:DropShadowEffect Color="#FFF5F5DC" /></av:Setter.Value></av:Setter></av:Style></BSkySourceList.Style></BSkySourceList><BSkyTargetList CanExecute="False" Syntax="%%VALUE%%" summaryCtrl="False" PrefixTxt="" SepCharacter="" maxNoOfVariables="1" SubstituteSettings="Prefix|UseComma" ordlevels="" nomlevels="" Name="Destination" AutoVar="True" renderVars="False" Filter="Numeric|Scale" Width="200" Height="30" Left="246" Top="25" Enabled="True" OverwriteSettings="{x:Null}" MoveVariables="True" SelectionMode="Extended"  AllowDrop="True" IsEnabled="True" Focusable="True" av:Canvas.Left="246" av:Canvas.Top="25" av:Grid.IsSharedSizeScope="True"><BSkyTargetList.SelectionChangeBehaviour><BehaviourCollection Capacity="4"><Behaviour><Behaviour.Condition><Condition PropertyName="ItemsCount" Value="0" Operator="Equals" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="Destination" PropertyName="CanExecute" Value="false" /></PropertySettersCollection></Behaviour.Setters></Behaviour><Behaviour><Behaviour.Condition><Condition PropertyName="ItemsCount" Value="0" Operator="GreaterThan" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="Destination" PropertyName="CanExecute" Value="true" /></PropertySettersCollection></Behaviour.Setters></Behaviour></BehaviourCollection></BSkyTargetList.SelectionChangeBehaviour><BSkyTargetList.Template><av:ControlTemplate TargetType="av:ListBox"><av:Border BorderThickness="1,1,1,1" CornerRadius="4,4,4,4" BorderBrush="#FF888888" Background="#FFFFFFFF"><av:ScrollViewer Margin="1,1,1,1" Focusable="False"><av:StackPanel IsItemsHost="True" Margin="0,0,0,0" /></av:ScrollViewer></av:Border></av:ControlTemplate></BSkyTargetList.Template><BSkyTargetList.Style><av:Style TargetType="av:ListBox"><av:Style.Resources><av:ResourceDictionary /></av:Style.Resources><av:Setter Property="av:UIElement.Effect"><av:Setter.Value><av:DropShadowEffect Color="#FFF5F5DC" /></av:Setter.Value></av:Setter></av:Style></BSkyTargetList.Style></BSkyTargetList><BSkyLabel Name="lab1" Text="Source variables" Width="108" Height="28" Left="8" Top="3" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="8" av:Canvas.Top="3">Source variables</BSkyLabel><BSkyLabel Name="lab2" Text="Select variable to plot (Choose one)" Width="200" Height="27" Left="244" Top="3" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="244" av:Canvas.Top="3">Select variable to plot (Choose one)</BSkyLabel><BSkyGroupBox Name="grp1" HeaderText="Leafs digit" Text="{x:Null}" Width="200" Height="81" Left="246" Top="71" Header="Leafs digit" Content="{x:Null}" BorderBrush="#FFA9A9A9" IsHitTestVisible="True" av:Canvas.Left="246" av:Canvas.Top="71" /><BSkyRadioButton GroupName="outliers" Name="Automatic" Text="Automatic" Width="75" Left="0" Top="0" Height="20" IsSelected="True" CanExecute="True" Enabled="True" Syntax="&quot;y&quot;" IsChecked="True" FontFamily="Segoe UI" FontSize="12" Style="{av:DynamicResource RadioButtonTemplate}" IsEnabled="True" av:Canvas.Left="255" av:Canvas.Top="95"><BSkyRadioButton.CheckedChangeBehaviour><BehaviourCollection Capacity="4"><Behaviour><Behaviour.Condition><Condition PropertyName="IsSelected" Value="True" Operator="Equals" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="Value" PropertyName="Enabled" Value="false" /><PropertySetter ControlName="Value" PropertyName="Text" Value="{x:Null}" /><PropertySetter ControlName="Value" PropertyName="CanExecute" Value="true" /></PropertySettersCollection></Behaviour.Setters></Behaviour></BehaviourCollection></BSkyRadioButton.CheckedChangeBehaviour>Automatic</BSkyRadioButton><BSkyRadioButton GroupName="outliers" Name="EnterValue" Text="Specify Value" Width="93" Left="0" Top="0" Height="18" IsSelected="False" CanExecute="True" Enabled="True" Syntax="&quot;none&quot;" IsChecked="False" FontFamily="Segoe UI" FontSize="12" Style="{av:DynamicResource RadioButtonTemplate}" IsEnabled="True" av:Canvas.Left="255" av:Canvas.Top="116"><BSkyRadioButton.CheckedChangeBehaviour><BehaviourCollection Capacity="4"><Behaviour><Behaviour.Condition><Condition PropertyName="IsSelected" Value="true" Operator="Equals" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="Value" PropertyName="Enabled" Value="true" /></PropertySettersCollection></Behaviour.Setters></Behaviour></BehaviourCollection></BSkyRadioButton.CheckedChangeBehaviour>Specify Value</BSkyRadioButton><BSkyTextBox PrefixTxt="unit=" OverWriteExistingVariables="False" OverwriteSettings="DontPrompt" Name="Value" Width="77" Height="25" Left="354" Top="114" SubstituteSettings="TextAsIs|PrefixByString" CanExecute="True" Enabled="False" Syntax="%%VALUE%%" TextWrapping="Wrap" AcceptsTab="True" VerticalScrollBarVisibility="Auto" FontFamily="Segoe UI" FontSize="12" VerticalContentAlignment="Center" Template="{av:DynamicResource TextBoxBaseControlTemplate}" AllowDrop="True" IsEnabled="False" av:Canvas.Left="354" av:Canvas.Top="114" xml:space="preserve"><BSkyTextBox.TextChangedBehaviour><BehaviourCollection Capacity="4"><Behaviour><Behaviour.Condition><Condition PropertyName="Text" Value="{x:Null}" Operator="NotNumeric" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="Value" PropertyName="CanExecute" Value="false" /></PropertySettersCollection></Behaviour.Setters></Behaviour><Behaviour><Behaviour.Condition><Condition PropertyName="Text" Value="{x:Null}" Operator="IsNumeric" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="Value" PropertyName="CanExecute" Value="true" /></PropertySettersCollection></Behaviour.Setters></Behaviour><Behaviour><Behaviour.Condition><Condition PropertyName="Text" Value="{x:Null}" Operator="isNullOrEmpty" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="Value" PropertyName="CanExecute" Value="false" /></PropertySettersCollection></Behaviour.Setters></Behaviour></BehaviourCollection></BSkyTextBox.TextChangedBehaviour><BSkyTextBox.Style><av:Style TargetType="av:TextBox"><av:Style.Resources><av:ResourceDictionary /></av:Style.Resources><av:Setter Property="av:UIElement.Effect"><av:Setter.Value><av:DropShadowEffect Color="#FFF5F5DC" /></av:Setter.Value></av:Setter></av:Style></BSkyTextBox.Style></BSkyTextBox><BSkyVariableMoveButton Name="move1" InputList="Source" TargetList="Destination" Width="30" Height="30" Left="198" Top="24" Padding="1,1,1,1" Tag="To Dest" Margin="2,2,2,2" av:Canvas.Left="198" av:Canvas.Top="24"><BSkyVariableMoveButton.Effect><av:DropShadowEffect ShadowDepth="0" Color="#C89B5F00" Direction="320" Opacity="1" /></BSkyVariableMoveButton.Effect><av:Grid><av:Image Source="pack://application:,,,/BSky.Controls;component/Resources/left.png" /></av:Grid></BSkyVariableMoveButton><BSkyGroupBox Name="StemOptions" HeaderText="Parts per stem" Text="{x:Null}" Width="200" Height="78" Left="246" Top="157" Header="Parts per stem" Content="{x:Null}" BorderBrush="#FFA9A9A9" IsHitTestVisible="True" av:Canvas.Left="246" av:Canvas.Top="157" /><BSkyRadioButton GroupName="" Name="StemAutomatic" Text="Automatic" Width="75" Left="0" Top="0" Height="20" IsSelected="True" CanExecute="True" Enabled="True" Syntax="%%VALUE%%" IsChecked="True" FontFamily="Segoe UI" FontSize="12" Style="{av:DynamicResource RadioButtonTemplate}" IsEnabled="True" av:Canvas.Left="255" av:Canvas.Top="179"><BSkyRadioButton.CheckedChangeBehaviour><BehaviourCollection Capacity="4"><Behaviour><Behaviour.Condition><Condition PropertyName="IsSelected" Value="true" Operator="Equals" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="StemValue" PropertyName="Enabled" Value="false" /><PropertySetter ControlName="StemValue" PropertyName="Text" Value="{x:Null}" /><PropertySetter ControlName="StemValue" PropertyName="CanExecute" Value="true" /></PropertySettersCollection></Behaviour.Setters></Behaviour></BehaviourCollection></BSkyRadioButton.CheckedChangeBehaviour>Automatic</BSkyRadioButton><BSkyRadioButton GroupName="" Name="SpecifyStemValue" Text="Specify Value" Width="94" Left="0" Top="0" Height="20" IsSelected="False" CanExecute="True" Enabled="True" Syntax="%%VALUE%%" IsChecked="False" FontFamily="Segoe UI" FontSize="12" Style="{av:DynamicResource RadioButtonTemplate}" IsEnabled="True" av:Canvas.Left="255" av:Canvas.Top="199"><BSkyRadioButton.CheckedChangeBehaviour><BehaviourCollection Capacity="4"><Behaviour><Behaviour.Condition><Condition PropertyName="IsSelected" Value="true" Operator="Equals" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="StemValue" PropertyName="Enabled" Value="true" /></PropertySettersCollection></Behaviour.Setters></Behaviour></BehaviourCollection></BSkyRadioButton.CheckedChangeBehaviour>Specify Value</BSkyRadioButton><BSkyTextBox PrefixTxt="m=" OverWriteExistingVariables="False" OverwriteSettings="DontPrompt" Name="StemValue" Width="73" Height="25" Left="356" Top="200" SubstituteSettings="TextAsIs|PrefixByString" CanExecute="True" Enabled="False" Syntax="%%VALUE%%" TextWrapping="Wrap" AcceptsTab="True" VerticalScrollBarVisibility="Auto" FontFamily="Segoe UI" FontSize="12" VerticalContentAlignment="Center" Template="{av:DynamicResource TextBoxBaseControlTemplate}" AllowDrop="True" IsEnabled="False" av:Canvas.Left="356" av:Canvas.Top="200" xml:space="preserve"><BSkyTextBox.TextChangedBehaviour><BehaviourCollection Capacity="4"><Behaviour><Behaviour.Condition><Condition PropertyName="Text" Value="{x:Null}" Operator="IsNumeric" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="StemValue" PropertyName="CanExecute" Value="true" /></PropertySettersCollection></Behaviour.Setters></Behaviour><Behaviour><Behaviour.Condition><Condition PropertyName="Text" Value="{x:Null}" Operator="NotNumeric" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="StemValue" PropertyName="CanExecute" Value="false" /></PropertySettersCollection></Behaviour.Setters></Behaviour></BehaviourCollection></BSkyTextBox.TextChangedBehaviour><BSkyTextBox.Style><av:Style TargetType="av:TextBox"><av:Style.Resources><av:ResourceDictionary /></av:Style.Resources><av:Setter Property="av:UIElement.Effect"><av:Setter.Value><av:DropShadowEffect Color="#FFF5F5DC" /></av:Setter.Value></av:Setter></av:Style></BSkyTextBox.Style></BSkyTextBox><BSkyRadioGroup Name="Style" HeaderText="Style of divided stems" Text="{x:Null}" Width="200" Height="64" Left="246" Top="247" Syntax="%%VALUE%%" Header="Style of divided stems" BorderBrush="#FFA9A9A9" IsHitTestVisible="True" av:Canvas.Left="246" av:Canvas.Top="247"><BSkyRadioGroup.RadioButtons><x:Null /></BSkyRadioGroup.RadioButtons><av:StackPanel><BSkyRadioButton GroupName="Style" Name="Tukey" Text="Tukey" Width="Auto" Left="0" Top="0" Height="Auto" IsSelected="True" CanExecute="True" Enabled="True" Syntax="&quot;Tukey&quot;" IsChecked="True" FontFamily="Segoe UI" FontSize="12" Style="{av:DynamicResource RadioButtonTemplate}" IsEnabled="True"><BSkyRadioButton.CheckedChangeBehaviour><BehaviourCollection Capacity="0" /></BSkyRadioButton.CheckedChangeBehaviour>Tukey</BSkyRadioButton><BSkyRadioButton GroupName="Style" Name="Repeated" Text="Repeated stem digits" Width="185.320116907227" Left="0" Top="0" Height="24" IsSelected="False" CanExecute="True" Enabled="True" Syntax="&quot;bare&quot;" IsChecked="False" FontFamily="Segoe UI" FontSize="12" Style="{av:DynamicResource RadioButtonTemplate}" IsEnabled="True"><BSkyRadioButton.CheckedChangeBehaviour><BehaviourCollection Capacity="0" /></BSkyRadioButton.CheckedChangeBehaviour>Repeated stem digits</BSkyRadioButton></av:StackPanel></BSkyRadioGroup><BSkyGroupBox Name="Options" HeaderText="Options" Text="{x:Null}" Width="200" Height="78" Left="246" Top="317" Header="Options" Content="{x:Null}" BorderBrush="#FFA9A9A9" IsHitTestVisible="True" av:Canvas.Left="246" av:Canvas.Top="317" /><BSkyCheckBox Name="Trim" Text="Trim Outliers" Width="101" Height="22" Left="255" Top="336" IsSelected="True" Enabled="True" CanExecute="True" Syntax="%%VALUE%%" uncheckedsyntax="FALSE" IsChecked="True" FontFamily="Segoe UI" FontSize="12" Style="{av:DynamicResource CheckBoxTemplate}" IsEnabled="True" av:Canvas.Left="255" av:Canvas.Top="336"><BSkyCheckBox.CheckedChangeBehaviour><BehaviourCollection Capacity="0" /></BSkyCheckBox.CheckedChangeBehaviour>Trim Outliers</BSkyCheckBox><BSkyCheckBox Name="Depths" Text="Show Depths" Width="103" Height="20" Left="255" Top="355" IsSelected="True" Enabled="True" CanExecute="True" Syntax="TRUE" uncheckedsyntax="FALSE" IsChecked="True" FontFamily="Segoe UI" FontSize="12" Style="{av:DynamicResource CheckBoxTemplate}" IsEnabled="True" av:Canvas.Left="255" av:Canvas.Top="355"><BSkyCheckBox.CheckedChangeBehaviour><BehaviourCollection Capacity="0" /></BSkyCheckBox.CheckedChangeBehaviour>Show Depths</BSkyCheckBox><BSkyCheckBox Name="NegativeLeaves" Text="Reverse negative leaves" Width="168" Height="22" Left="255" Top="375" IsSelected="True" Enabled="True" CanExecute="True" Syntax="TRUE" uncheckedsyntax="FALSE" IsChecked="True" FontFamily="Segoe UI" FontSize="12" Style="{av:DynamicResource CheckBoxTemplate}" IsEnabled="True" av:Canvas.Left="255" av:Canvas.Top="375"><BSkyCheckBox.CheckedChangeBehaviour><BehaviourCollection Capacity="0" /></BSkyCheckBox.CheckedChangeBehaviour>Reverse negative leaves</BSkyCheckBox><BSkyLabelReqdField Name="rq1" Text="*" Width="15" Height="25" Left="433" Top="0" CanExecute="False" Foreground="#FFFF0000" FontFamily="Segoe UI" FontSize="12" FontWeight="Bold" av:Canvas.Left="433" av:Canvas.Top="0">*</BSkyLabelReqdField></BSkyCanvas>