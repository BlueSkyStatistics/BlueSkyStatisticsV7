<BSkyCanvas internalhelpfilename="{x:Null}" Title="Training Neuralnets (neuralnet package)" ModelClasses="{x:Null}" StatusTextBoxName="{x:Null}" customsyntax="{x:Null}" EditableComboBoxName="{x:Null}" RPackages="neuralnet;NeuralNetTools" CanExecute="True" PrereqCommandString="{x:Null}" CommandString="#Setting a seed&#xA;set.seed({{seed}})&#xA;#Creating the model&#xA;{{model}}&lt;-neuralnet::neuralnet( formula={{dependentvar}} ~ {{independentvars}}, data = {{%DATASET%}}, hidden = {{layers}},threshold ={{threshold}},  stepmax = {{iter}}, rep ={{rep}}, algorithm= &quot;{{tf}}&quot;,learningrate.factor = list(minus = {{minus}}, plus = {{upper}}),lifesign = '{{lifesign}}', lifesign.step = {{lifesignstep}}, err.fct = '{{errfct}}', act.fct = '{{OutActFunc}}', linear.output = {{linearoutput}},  likelihood = {{likelihood}})&#xA; if (!is.null({{model}}))&#xA;{&#xA;#Plotting the model&#xA;NeuralNetTools::plotnet({{model}})&#xA;plot({{model}},rep=&quot;best&quot;)&#xA;&#xA;#Listing weights&#xA;NeuralNetTools::neuralweights({{model}})&#xA;&#xA;#Setting attributes to support scoring&#xA;attr(.GlobalEnv${{model}},&quot;depvar&quot;)=&quot;c({{@dependentvar}})&quot;&#xA;attr(.GlobalEnv${{model}},&quot;indepvar&quot;)=&quot;c({{@independentvars}})&quot;&#xA;}" dlgsyntax="#Setting a seed&#xA;set.seed({{seed}})&#xA;#Creating the model&#xA;{{model}}&lt;-neuralnet::neuralnet( formula={{dependentvar}} ~ {{independentvars}}, data = {{%DATASET%}}, hidden = {{layers}},threshold ={{threshold}},  stepmax = {{iter}}, rep ={{rep}}, algorithm= &quot;{{tf}}&quot;,learningrate.factor = list(minus = {{minus}}, plus = {{upper}}),lifesign = '{{lifesign}}', lifesign.step = {{lifesignstep}}, err.fct = '{{errfct}}', act.fct = '{{OutActFunc}}', linear.output = {{linearoutput}},  likelihood = {{likelihood}})&#xA; if (!is.null({{model}}))&#xA;{&#xA;#Plotting the model&#xA;NeuralNetTools::plotnet({{model}})&#xA;plot({{model}},rep=&quot;best&quot;)&#xA;&#xA;#Listing weights&#xA;NeuralNetTools::neuralweights({{model}})&#xA;&#xA;#Setting attributes to support scoring&#xA;attr(.GlobalEnv${{model}},&quot;depvar&quot;)=&quot;c({{@dependentvar}})&quot;&#xA;attr(.GlobalEnv${{model}},&quot;indepvar&quot;)=&quot;c({{@independentvars}})&quot;&#xA;}" Helpfile="{x:Null}" splitProcessing="False" DatasetRequired="True" MenuLocation="{x:Null}" OutputDefinition="" Width="579" Command="False" Height="620" HelpText="&lt;html&gt;&lt;head&gt;&lt;style type=&quot;text/css&quot;&gt;.c0 { color: Black } .c1 { margin: 0px 0px 10px } .c2 { font-weight: bold; text-decoration: underline; font-size: 16px } .c3 { font-size: 18.6666666666667px; font-weight: bold } .c4 { font-family: 'Arial'; font-size: 14.6666666666667px } .c5 { margin: 0px 0px 12px; font-size: 16.5px; font-weight: bold } .c6 { font-weight: bold; font-size: 14.6666660308838px; line-height: 1.14999997615814; font-family: 'Arial' } .c7 { color: Black; font-family: 'Times New Roman'; font-size: 18.6666666666667px; font-style: normal; font-weight: normal; text-indent: 0px; background-color: White } .c8 { margin: 0px 0px 10px; line-height: 1.14999997615814; font-size: 11px; font-family: 'Arial' } .c9 { font-weight: bold; font-size: 14.6666660308838px; font-family: 'Arial' } .c10 { font-family: 'Courier New'; color: Black; font-style: normal; font-weight: normal; text-indent: 0px; font-size: 16px } .c11 { margin: 0px 0px 13px; line-height: 1.14999997615814; font-size: 11px; font-family: 'Arial' } .c12 { margin: 0px 0px 11px; font-size: 12.87px; font-weight: bold } .c13 { font-size: 18.87px } .c14 { font-weight: normal } .c15 { font-weight: normal; font-size: 14.6666660308838px; font-family: 'Arial' } .c16 { font-size: 14.6666660308838px; font-family: 'Arial' } &lt;/style&gt;&lt;/head&gt;&lt;body class=&quot;c0&quot;&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;div&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;Neural networks using the neuralnet package&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;NOTE:&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;div&gt;&lt;span&gt;&lt;span class=&quot;c4&quot;&gt;When specifying a singe dependent variable, it &amp;#160;can be numeric or factor. If the dependent variable specified is a factor, we automatically dummy code the factor variable using one-hot Encoding using the decode function in the RSNNS package.&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span class=&quot;c4&quot;&gt;Additionally, if you are using one-hot encoding to dummy code a factor variable, you can specify more than one dependent variable in the dialog. In this case, the dependent variables must be of type numeric.&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span class=&quot;c4&quot;&gt;You can use &amp;quot;Data &amp;gt; Compute dummy variables&amp;quot;, choose the “Keep all levels” setting to get one-hot encoding.&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span class=&quot;c4&quot;&gt;For dependent variables of type factor, we will display a confusion matrix, ROC and model accuracy statistics when scoring a dataset using the model built. The predictions generated are of type factor since we predict the class. These will be saved in the dataset along with the predicted probabilities when scoring.&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span class=&quot;c4&quot;&gt;When there are dummy coded dependent variables, we will not display a confusion matrix, ROC and model accuracy statistics when scoring a dataset using the model built. However, the predictions will be saved in the dataset when scoring the dataset. The predictions are the probabilities associated with the dummy coded dependent variables.&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span class=&quot;c4&quot;&gt;It usually best to standardize independent variables (they must be numeric, too) See “Data &amp;gt; Standardize Variables.”&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span class=&quot;c4&quot;&gt;If you have categorical independent variables, use one-hot encoding to dummy code the factor variables.&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;#x200b;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c6&quot;&gt;Description:&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&amp;#x200b;&lt;span&gt;&lt;span class=&quot;c7&quot;&gt;Train neural networks using backpropagation, resilient backpropagation (RPROP) with (Riedmiller, 1994) or without weight backtracking (Riedmiller and Braun, 1993) or the modified globally convergent version (GRPROP) by Anastasiadis et al. (2005). The function allows flexible settings through custom-choice of error and activation function. Furthermore, the calculation of generalized weights (Intrator O. and Intrator N., 1993) is implemented.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;&lt;div&gt;&amp;#x200b;&lt;/div&gt;&lt;p class=&quot;c8&quot;&gt;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;Usage:&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;div&gt;&lt;span&gt;&lt;span class=&quot;c10&quot;&gt;neuralnet(formula, data, hidden = 1, threshold = 0.01,&lt;br/&gt; &amp;#160;stepmax = 1e+05, rep = 1, startweights = NULL,&lt;br/&gt; &amp;#160;learningrate.limit = NULL, learningrate.factor = list(minus = 0.5,&lt;br/&gt; &amp;#160;plus = 1.2), learningrate = NULL, lifesign = &amp;quot;none&amp;quot;,&lt;br/&gt; &amp;#160;lifesign.step = 1000, algorithm = &amp;quot;rprop+&amp;quot;, err.fct = &amp;quot;sse&amp;quot;,&lt;br/&gt; &amp;#160;act.fct = &amp;quot;logistic&amp;quot;, linear.output = TRUE, exclude = NULL,&lt;br/&gt; &amp;#160;constant.weights = NULL, likelihood = FALSE)&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;div class=&quot;c12&quot;&gt;&lt;span&gt;&lt;span class=&quot;c13&quot;&gt;Arguments&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;c12&quot;&gt;&lt;span&gt;&lt;span class=&quot;c14&quot;&gt;formula: a symbolic description of the model to be fitted.&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;c12&quot;&gt;&lt;span&gt;&amp;#x200b;&lt;span&gt;&lt;span class=&quot;c14&quot;&gt;data: a data frame containing the variables specified in formula.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;c12&quot;&gt;&lt;span&gt;&amp;#x200b;&lt;span&gt;&lt;span class=&quot;c14&quot;&gt;hidden: a vector of integers specifying the number of hidden neurons (vertices) in each layer.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;c12&quot;&gt;&lt;span&gt;&amp;#x200b;&lt;span&gt;&lt;span class=&quot;c14&quot;&gt;threshold: a numeric value specifying the threshold for the partial derivatives of the error function as stopping criteria.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;c12&quot;&gt;&lt;span&gt;&amp;#x200b;&lt;span&gt;&lt;span class=&quot;c14&quot;&gt;stepmax: the maximum steps for the training of the neural network. Reaching this maximum leads to a stop of the neural network's training process.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;c12&quot;&gt;&lt;span&gt;&amp;#x200b;&lt;span&gt;&lt;span class=&quot;c14&quot;&gt;rep: the number of repetitions for the neural network's training.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;c12&quot;&gt;&lt;span&gt;&amp;#x200b;&lt;span&gt;&lt;span class=&quot;c14&quot;&gt;startweights: a vector containing starting values for the weights. Set to NULL for random initialization.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;c12&quot;&gt;&lt;span&gt;&amp;#x200b;&lt;span&gt;&lt;span class=&quot;c14&quot;&gt;learningrate.limit: a vector or a list containing the lowest and highest limit for the learning rate. Used only for RPROP and GRPROP.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;c12&quot;&gt;&lt;span&gt;&amp;#x200b;&lt;span&gt;&lt;span class=&quot;c14&quot;&gt;learningrate.factor: a vector or a list containing the multiplication factors for the upper and lower learning rate. Used only for RPROP and GRPROP.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;c12&quot;&gt;&lt;span&gt;&amp;#x200b;&lt;span&gt;&lt;span class=&quot;c14&quot;&gt;learningrate: a numeric value specifying the learning rate used by traditional backpropagation. Used only for traditional backpropagation.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;c12&quot;&gt;&lt;span&gt;&amp;#x200b;&lt;span&gt;&lt;span class=&quot;c14&quot;&gt;lifesign: a string specifying how much the function will print during the calculation of the neural network. 'none', 'minimal' or 'full'.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;c12&quot;&gt;&lt;span&gt;&amp;#x200b;&lt;span&gt;&lt;span class=&quot;c14&quot;&gt;lifesign.step: an integer specifying the stepsize to print the minimal threshold in full lifesign mode.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;c12&quot;&gt;&lt;span&gt;&amp;#x200b;&lt;span&gt;&lt;span class=&quot;c14&quot;&gt;algorithm: a string containing the algorithm type to calculate the neural network. The following types are possible: 'backprop', 'rprop+', 'rprop-', 'sag', or 'slr'. 'backprop' refers to backpropagation, 'rprop+' and 'rprop-' refer to the resilient backpropagation with and without weight backtracking, while 'sag' and 'slr' induce the usage of the modified globally convergent algorithm (grprop). See Details for more information.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;c12&quot;&gt;&lt;span&gt;&amp;#x200b;&lt;span&gt;&lt;span class=&quot;c14&quot;&gt;err.fct: a differentiable function that is used for the calculation of the error. Alternatively, the strings 'sse' and 'ce' which stand for the sum of squared errors and the cross-entropy can be used.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;c12&quot;&gt;&lt;span&gt;&amp;#x200b;&lt;span&gt;&lt;span class=&quot;c14&quot;&gt;act.fct: a differentiable function that is used for smoothing the result of the cross product of the covariate or neurons and the weights. Additionally the strings, 'logistic' and 'tanh' are possible for the logistic function and tangent hyperbolicus.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;c12&quot;&gt;&lt;span&gt;&amp;#x200b;&lt;span&gt;&lt;span class=&quot;c14&quot;&gt;linear.output: logical. If act.fct should not be applied to the output neurons set linear output to TRUE, otherwise to FALSE.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;c12&quot;&gt;&lt;span&gt;&amp;#x200b;&lt;span&gt;&lt;span class=&quot;c14&quot;&gt;exclude: a vector or a matrix specifying the weights, that are excluded from the calculation. If given as a vector, the exact positions of the weights must be known. A matrix with n-rows and 3 columns will exclude n weights, where the first column stands for the layer, the second column for the input neuron and the third column for the output neuron of the weight.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;c12&quot;&gt;&lt;span&gt;&amp;#x200b;&lt;span&gt;&lt;span class=&quot;c14&quot;&gt;constant.weights: a vector specifying the values of the weights that are excluded from the training process and treated as fix.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;c12&quot;&gt;&lt;span&gt;&amp;#x200b;&lt;span&gt;&lt;span class=&quot;c14&quot;&gt;likelihood: logical. If the error function is equal to the negative log-likelihood function, the information criteria AIC and BIC will be calculated. Furthermore the usage of confidence.interval is meaningful.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&amp;#x200b;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;Details&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;The globally convergent algorithm is based on the resilient backpropagation without weight backtracking and additionally modifies one learning rate, either the learningrate associated with the smallest absolute gradient (sag) or the smallest learningrate (slr) itself. The learning rates in the grprop algorithm are limited to the boundaries defined in learningrate.limit.&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&amp;#x200b;Value&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;neuralnet returns an object of class nn. An object of class nn is a list containing at most the following components:&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&amp;#x200b;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;call&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;the matched call.&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&amp;#x200b;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;response&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;extracted from the data argument.&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&amp;#x200b;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;covariate&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;the variables extracted from the data argument.&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&amp;#x200b;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;model.list&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;a list containing the covariates and the response variables extracted from the formula argument.&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&amp;#x200b;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;err.fct&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;the error function.&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&amp;#x200b;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;act.fct&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;the activation function.&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&amp;#x200b;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;data&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;the data argument.&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&amp;#x200b;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;net.result&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;a list containing the overall result of the neural network for every repetition.&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&amp;#x200b;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;weights&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;a list containing the fitted weights of the neural network for every repetition.&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&amp;#x200b;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;generalized.weights&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;a list containing the generalized weights of the neural network for every repetition.&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&amp;#x200b;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;result.matrix&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;a matrix containing the reached threshold, needed steps, error, AIC and BIC (if computed) and weights for every repetition. Each column represents one repetition.&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&amp;#x200b;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;startweights&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;a list containing the startweights of the neural network for every repetition.&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&amp;#x200b;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;Author(s)&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;Stefan Fritsch, Frauke Guenther, Marvin N. Wright&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&amp;#x200b;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;References&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;Riedmiller M. (1994) Rprop - Description and Implementation Details. Technical Report. University of Karlsruhe.&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&amp;#x200b;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;Riedmiller M. and Braun H. (1993) A direct adaptive method for faster backpropagation learning: The RPROP algorithm. Proceedings of the IEEE International Conference on Neural Networks (ICNN), pages 586-591. San Francisco.&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&amp;#x200b;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;Anastasiadis A. et. al. (2005) New globally convergent training scheme based on the resilient propagation algorithm. Neurocomputing 64, pages 253-270.&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&amp;#x200b;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;Intrator O. and Intrator N. (1993) Using Neural Nets for Interpretation of Nonlinear Models. Proceedings of the Statistical Computing Section, 244-249 San Francisco: American Statistical Society (eds).&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&amp;#x200b;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;See Also&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;plot.nn for plotting the neural network.&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&amp;#x200b;gwplot for plotting the generalized weights.&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&amp;#x200b;predict.nn for computation of a given neural network for given covariate vectors (formerly compute).&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&amp;#x200b;confidence.interval for calculation of confidence intervals of the weights.&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&amp;#x200b;prediction for a summary of the output of the neural network.&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&amp;#x200b;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;Examples&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&amp;#x200b;library(neuralnet)&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&amp;#x200b;# Binary classification&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;nn &amp;lt;- neuralnet(Species == &amp;quot;setosa&amp;quot; ~ Petal.Length + Petal.Width, iris, linear.output = FALSE)&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;## Not run: print(nn)&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;## Not run: plot(nn)&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&amp;#x200b;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;# Multiclass classification&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;nn &amp;lt;- neuralnet(Species ~ Petal.Length + Petal.Width, iris, linear.output = FALSE)&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;## Not run: print(nn)&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;## Not run: plot(nn)&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&amp;#x200b;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;# Custom activation function&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;softplus &amp;lt;- function(x) log(1 + exp(x))&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;nn &amp;lt;- neuralnet((Species == &amp;quot;setosa&amp;quot;) ~ Petal.Length + Petal.Width, iris,&amp;#160;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;linear.output = FALSE, hidden = c(3, 2), act.fct = softplus)&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;## Not run: print(nn)&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;## Not run: plot(nn)&lt;/p&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span&gt;&lt;span class=&quot;c15&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c8&quot;&gt;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;Package&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c8&quot;&gt;&lt;span&gt;&lt;span class=&quot;c16&quot;&gt;neuralnet&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;" RHelpText="help(neuralnet, package='neuralnet')" Background="#FFFFFFFF" xmlns="clr-namespace:BSky.Controls;assembly=BSky.Controls" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib"><BSkySourceList CanExecute="True" Syntax="%%VALUE%%" summaryCtrl="False" PrefixTxt="{x:Null}" SepCharacter="{x:Null}" maxNoOfVariables="" SubstituteSettings="NoPrefix|UseComma" ordlevels="" nomlevels="" Name="src" AutoVar="False" renderVars="False" Filter="String|Numeric|Date|Logical|Ordinal|Nominal|Scale" Width="260" Height="269" Left="7.33333333333337" Top="71" Enabled="True" OverwriteSettings="{x:Null}" MoveVariables="True" SelectionMode="Extended"  AllowDrop="True" IsEnabled="True" Focusable="True" av:Canvas.Left="7.33333333333337" av:Canvas.Top="71" av:Grid.IsSharedSizeScope="True"><BSkySourceList.SelectionChangeBehaviour><BehaviourCollection Capacity="0" /></BSkySourceList.SelectionChangeBehaviour><BSkySourceList.Template><av:ControlTemplate TargetType="av:ListBox"><av:Border BorderThickness="1,1,1,1" CornerRadius="4,4,4,4" BorderBrush="#FF888888" Background="#FFFFFFFF"><av:ScrollViewer Margin="1,1,1,1" Focusable="False"><av:StackPanel IsItemsHost="True" Margin="0,0,0,0" /></av:ScrollViewer></av:Border></av:ControlTemplate></BSkySourceList.Template><BSkySourceList.Style><av:Style TargetType="av:ListBox"><av:Style.Resources><av:ResourceDictionary /></av:Style.Resources><av:Setter Property="av:UIElement.Effect"><av:Setter.Value><av:DropShadowEffect Color="#FFF5F5DC" /></av:Setter.Value></av:Setter></av:Style></BSkySourceList.Style></BSkySourceList><BSkyTargetList CanExecute="False" Syntax="%%VALUE%%" summaryCtrl="False" PrefixTxt="" SepCharacter="" maxNoOfVariables="" SubstituteSettings="NoPrefix|UsePlus" ordlevels="" nomlevels="" Name="independentvars" AutoVar="True" renderVars="False" Filter="Numeric|Ordinal|Nominal|Scale" Width="258" Height="123" Left="309" Top="217" Enabled="True" OverwriteSettings="{x:Null}" MoveVariables="True" SelectionMode="Extended"  AllowDrop="True" IsEnabled="True" Focusable="True" av:Canvas.Left="309" av:Canvas.Top="217" av:Grid.IsSharedSizeScope="True"><BSkyTargetList.SelectionChangeBehaviour><BehaviourCollection Capacity="4"><Behaviour><Behaviour.Condition><Condition PropertyName="ItemsCount" Value="0" Operator="GreaterThan" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="independentvars" PropertyName="CanExecute" Value="True" /></PropertySettersCollection></Behaviour.Setters></Behaviour><Behaviour><Behaviour.Condition><Condition PropertyName="ItemsCount" Value="0" Operator="Equals" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="independentvars" PropertyName="CanExecute" Value="False" /></PropertySettersCollection></Behaviour.Setters></Behaviour></BehaviourCollection></BSkyTargetList.SelectionChangeBehaviour><BSkyTargetList.Template><av:ControlTemplate TargetType="av:ListBox"><av:Border BorderThickness="1,1,1,1" CornerRadius="4,4,4,4" BorderBrush="#FF888888" Background="#FFFFFFFF"><av:ScrollViewer Margin="1,1,1,1" Focusable="False"><av:StackPanel IsItemsHost="True" Margin="0,0,0,0" /></av:ScrollViewer></av:Border></av:ControlTemplate></BSkyTargetList.Template><BSkyTargetList.Style><av:Style TargetType="av:ListBox"><av:Style.Resources><av:ResourceDictionary /></av:Style.Resources><av:Setter Property="av:UIElement.Effect"><av:Setter.Value><av:DropShadowEffect Color="#FFF5F5DC" /></av:Setter.Value></av:Setter></av:Style></BSkyTargetList.Style></BSkyTargetList><BSkySpinnerCtrl Syntax="{x:Null}" Enabled="True" Name="iter" Text="10000" Step="1000" Width="83" Height="22" Left="443" Top="355" CanExecute="True" IsEnabled="True" av:Canvas.Left="443" av:Canvas.Top="355"></BSkySpinnerCtrl><BSkySpinnerCtrl Syntax="{x:Null}" Enabled="True" Name="seed" Text="12345" Step="1" Width="83" Height="22" Left="69" Top="354" CanExecute="True" IsEnabled="True" av:Canvas.Left="69" av:Canvas.Top="354"></BSkySpinnerCtrl><BSkySpinnerCtrl Syntax="{x:Null}" Enabled="True" Name="threshold" Text="0.01" Step="0.01" Width="83" Height="22" Left="443" Top="391" CanExecute="True" IsEnabled="True" av:Canvas.Left="443" av:Canvas.Top="391"></BSkySpinnerCtrl><BSkyTargetList CanExecute="True" Syntax="%%VALUE%%" summaryCtrl="False" PrefixTxt="" SepCharacter="" maxNoOfVariables="" SubstituteSettings="NoPrefix|UsePlus" ordlevels="" nomlevels="" Name="dependentvar" AutoVar="True" renderVars="False" Filter="Numeric|Logical|Ordinal|Nominal|Scale" Width="255" Height="55" Left="310" Top="130" Enabled="True" OverwriteSettings="{x:Null}" MoveVariables="True" SelectionMode="Extended"  AllowDrop="True" IsEnabled="True" Focusable="True" av:Canvas.Left="310" av:Canvas.Top="130" av:Grid.IsSharedSizeScope="True"><BSkyTargetList.SelectionChangeBehaviour><BehaviourCollection Capacity="0" /></BSkyTargetList.SelectionChangeBehaviour><BSkyTargetList.Template><av:ControlTemplate TargetType="av:ListBox"><av:Border BorderThickness="1,1,1,1" CornerRadius="4,4,4,4" BorderBrush="#FF888888" Background="#FFFFFFFF"><av:ScrollViewer Margin="1,1,1,1" Focusable="False"><av:StackPanel IsItemsHost="True" Margin="0,0,0,0" /></av:ScrollViewer></av:Border></av:ControlTemplate></BSkyTargetList.Template><BSkyTargetList.Style><av:Style TargetType="av:ListBox"><av:Style.Resources><av:ResourceDictionary /></av:Style.Resources><av:Setter Property="av:UIElement.Effect"><av:Setter.Value><av:DropShadowEffect Color="#FFF5F5DC" /></av:Setter.Value></av:Setter></av:Style></BSkyTargetList.Style></BSkyTargetList><BSkyLabel Name="srclbl" Text="Source Variables" Width="140" Height="25" Left="3.99999999999999" Top="42" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="3.99999999999999" av:Canvas.Top="42">Source Variables</BSkyLabel><BSkyLabel Name="lbl2" Text="Dependent Variable (one or more)" Width="216" Height="27" Left="305" Top="104" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="305" av:Canvas.Top="104">Dependent Variable (one or more)</BSkyLabel><BSkyLabel Name="lbl3" Text="Independent Variables (one or more)" Width="206.333333333333" Height="26.6666666666667" Left="305" Top="190" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="305" av:Canvas.Top="190">Independent Variables (one or more)</BSkyLabel><BSkyLabel Name="lbl5" Text="Algorithm" Width="100.333333333333" Height="28.6666666666667" Left="3" Top="388" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="3" av:Canvas.Top="388">Algorithm</BSkyLabel><BSkyVariableMoveButton Name="mov1" InputList="src" TargetList="dependentvar" Width="30" Height="30" Left="270" Top="130" Padding="1,1,1,1" Tag="To Dest" Margin="2,2,2,2" av:Canvas.Left="270" av:Canvas.Top="130"><BSkyVariableMoveButton.Effect><av:DropShadowEffect ShadowDepth="0" Color="#C89B5F00" Direction="320" Opacity="1" /></BSkyVariableMoveButton.Effect><av:Grid><av:Image Source="pack://application:,,,/BSky.Controls;component/Resources/left.png" /></av:Grid></BSkyVariableMoveButton><BSkyVariableMoveButton Name="mov2" InputList="src" TargetList="independentvars" Width="30" Height="30" Left="271" Top="216" Padding="1,1,1,1" Tag="To Dest" Margin="2,2,2,2" av:Canvas.Left="271" av:Canvas.Top="216"><BSkyVariableMoveButton.Effect><av:DropShadowEffect ShadowDepth="0" Color="#C89B5F00" Direction="320" Opacity="1" /></BSkyVariableMoveButton.Effect><av:Grid><av:Image Source="pack://application:,,,/BSky.Controls;component/Resources/left.png" /></av:Grid></BSkyVariableMoveButton><BSkyLabel Name="lab60" Text="Set Seed" Width="63.3333333333333" Height="26.3333333333333" Left="3" Top="350" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="3" av:Canvas.Top="350">Set Seed</BSkyLabel><BSkyLabelReqdField Name="rq1" Text="*" Width="27" Height="21" Left="486" Top="96" CanExecute="False" Foreground="#FFFF0000" FontFamily="Segoe UI" FontSize="12" FontWeight="Bold" av:Canvas.Left="486" av:Canvas.Top="96">*</BSkyLabelReqdField><BSkyLabelReqdField Name="rq2" Text="*" Width="15" Height="25" Left="500" Top="180" CanExecute="False" Foreground="#FFFF0000" FontFamily="Segoe UI" FontSize="12" FontWeight="Bold" av:Canvas.Left="500" av:Canvas.Top="180">*</BSkyLabelReqdField><BSkyNonEditableComboBox Name="tf" NothingSelected="{x:Null}" Width="113" Height="27" Left="110" Top="390" CanExecute="True" Enabled="True" Syntax="%%VALUE%%" Text="rprop+" IsEnabled="True" av:Canvas.Left="110" av:Canvas.Top="390"><BSkyNonEditableComboBox.ComboBoxEntries><x:Null /></BSkyNonEditableComboBox.ComboBoxEntries><BSkyNonEditableComboBox.SelectionChangeBehaviour><BehaviourCollection Capacity="0" /></BSkyNonEditableComboBox.SelectionChangeBehaviour><s:String>rprop+</s:String><s:String>rprop-</s:String><s:String>sag</s:String><s:String>slr</s:String></BSkyNonEditableComboBox><BSkyLabel Name="lab6" Text="The number of neurons in each hidden layer, for example" Width="322" Height="26.9999999999999" Left="14" Top="445" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="14" av:Canvas.Top="445">The number of neurons in each hidden layer, for example</BSkyLabel><BSkyLabel Name="lab7" Text="1. For 5 neurons in 1 layer, enter 5" Width="339" Height="28" Left="14" Top="464" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="14" av:Canvas.Top="464">1. For 5 neurons in 1 layer, enter 5</BSkyLabel><BSkyLabel Name="kngf" Text="2. For 5 neurons in layer 1, 6 neurons in layer 2, 7 neurons in layer 3 enter 5,6,7" Width="448" Height="24" Left="14" Top="484" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="14" av:Canvas.Top="484">2. For 5 neurons in layer 1, 6 neurons in layer 2, 7 neurons in layer 3 enter 5,6,7</BSkyLabel><BSkyTextBox PrefixTxt="c" OverWriteExistingVariables="False" AllowSpaces="True" OverwriteSettings="DontPrompt" Name="layers" Width="60" Height="30" Left="260" Top="507" SubstituteSettings="TextAsIs|PrefixByString|Brackets" CanExecute="True" Enabled="True" Syntax="%%VALUE%%" TextWrapping="Wrap" AcceptsTab="True" VerticalScrollBarVisibility="Auto" FontFamily="Segoe UI" FontSize="12" VerticalContentAlignment="Center" Template="{av:DynamicResource TextBoxBaseControlTemplate}" AllowDrop="True" IsEnabled="True" av:Canvas.Left="260" av:Canvas.Top="507"><BSkyTextBox.TextChangedBehaviour><BehaviourCollection Capacity="4"><Behaviour><Behaviour.Condition><Condition PropertyName="Text" Value="{x:Null}" Operator="isNullOrEmpty" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="layers" PropertyName="CanExecute" Value="False" /></PropertySettersCollection></Behaviour.Setters></Behaviour><Behaviour><Behaviour.Condition><Condition PropertyName="Text" Value="{x:Null}" Operator="ValidString" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="layers" PropertyName="CanExecute" Value="True" /></PropertySettersCollection></Behaviour.Setters></Behaviour></BehaviourCollection></BSkyTextBox.TextChangedBehaviour><BSkyTextBox.Style><av:Style TargetType="av:TextBox"><av:Style.Resources><av:ResourceDictionary /></av:Style.Resources><av:Setter Property="av:UIElement.Effect"><av:Setter.Value><av:DropShadowEffect Color="#FFF5F5DC" /></av:Setter.Value></av:Setter></av:Style></BSkyTextBox.Style>5</BSkyTextBox><BSkyLabel Name="oac" Text="Specify an output activation function" Width="205" Height="28" Left="3" Top="564" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="3" av:Canvas.Top="564">Specify an output activation function</BSkyLabel><BSkyNonEditableComboBox Name="OutActFunc" NothingSelected="{x:Null}" Width="100" Height="25" Left="261" Top="565" CanExecute="True" Enabled="True" Syntax="%%VALUE%%" Text="logistic" IsEnabled="True" av:Canvas.Left="261" av:Canvas.Top="565"><BSkyNonEditableComboBox.ComboBoxEntries><x:Null /></BSkyNonEditableComboBox.ComboBoxEntries><BSkyNonEditableComboBox.SelectionChangeBehaviour><BehaviourCollection Capacity="0" /></BSkyNonEditableComboBox.SelectionChangeBehaviour><s:String>logistic</s:String><s:String>tanh</s:String></BSkyNonEditableComboBox><BSkyGroupBox Name="grp1" HeaderText="No of hiddden layers and the neurons per hidden layer" Text="{x:Null}" Width="562" Height="117" Left="7" Top="428" Header="No of hiddden layers and the neurons per hidden layer" Content="{x:Null}" BorderBrush="#FFA9A9A9" IsHitTestVisible="True" av:Canvas.Left="7" av:Canvas.Top="428" /><BSkyLabel Name="lab9" Text="Specify the number of neurons in each layer" Width="243" Height="28" Left="14" Top="509" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="14" av:Canvas.Top="509">Specify the number of neurons in each layer</BSkyLabel><BSkyLabel Name="iterlab" Text="Max steps for learning" Width="128" Height="26" Left="307" Top="350" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="307" av:Canvas.Top="350">Max steps for learning</BSkyLabel><BSkyTextBox PrefixTxt="{x:Null}" OverWriteExistingVariables="False" AllowSpaces="False" OverwriteSettings="DontPrompt" Name="model" Width="100" Height="30" Left="310" Top="72" SubstituteSettings="TextAsIs" CanExecute="True" Enabled="True" Syntax="%%VALUE%%" TextWrapping="Wrap" AcceptsTab="True" VerticalScrollBarVisibility="Auto" FontFamily="Segoe UI" FontSize="12" VerticalContentAlignment="Center" Template="{av:DynamicResource TextBoxBaseControlTemplate}" AllowDrop="True" IsEnabled="True" av:Canvas.Left="310" av:Canvas.Top="72"><BSkyTextBox.TextChangedBehaviour><BehaviourCollection Capacity="4"><Behaviour><Behaviour.Condition><Condition PropertyName="Text" Value="{x:Null}" Operator="isNullOrEmpty" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="model" PropertyName="CanExecute" Value="False" /></PropertySettersCollection></Behaviour.Setters></Behaviour><Behaviour><Behaviour.Condition><Condition PropertyName="Text" Value="{x:Null}" Operator="ValidString" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="model" PropertyName="CanExecute" Value="True" /></PropertySettersCollection></Behaviour.Setters></Behaviour><Behaviour><Behaviour.Condition><Condition PropertyName="Text" Value="{x:Null}" Operator="IsNumeric" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="model" PropertyName="CanExecute" Value="False" /></PropertySettersCollection></Behaviour.Setters></Behaviour></BehaviourCollection></BSkyTextBox.TextChangedBehaviour><BSkyTextBox.Style><av:Style TargetType="av:TextBox"><av:Style.Resources><av:ResourceDictionary /></av:Style.Resources><av:Setter Property="av:UIElement.Effect"><av:Setter.Value><av:DropShadowEffect Color="#FFF5F5DC" /></av:Setter.Value></av:Setter></av:Style></BSkyTextBox.Style>neuralnet</BSkyTextBox><BSkyLabel Name="labmod" Text="Enter a model name" Width="118" Height="24" Left="305" Top="44" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="305" av:Canvas.Top="44">Enter a model name</BSkyLabel><BSkyLabelReqdField Name="jj" Text="*" Width="15" Height="25" Left="412" Top="37" CanExecute="False" Foreground="#FFFF0000" FontFamily="Segoe UI" FontSize="12" FontWeight="Bold" av:Canvas.Left="412" av:Canvas.Top="37">*</BSkyLabelReqdField><BSkyLabel Name="th" Text="Threshold" Width="86" Height="25" Left="307" Top="388" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="307" av:Canvas.Top="388">Threshold</BSkyLabel><BSkyButton Name="btn" Text="Advanced" Width="60" Height="30" Left="504" Top="47" Designer="{x:Null}" CanExecute="True" Enabled="True" IsEnabled="True" av:Canvas.Left="504" av:Canvas.Top="47"><BSkyButton.ClickBehaviour><BehaviourCollection Capacity="0" /></BSkyButton.ClickBehaviour><BSkyButton.Resources><BSkyCanvas internalhelpfilename="{x:Null}" Title="Advanced" ModelClasses="{x:Null}" StatusTextBoxName="{x:Null}" customsyntax="{x:Null}" EditableComboBoxName="{x:Null}" RPackages="{x:Null}" CanExecute="True" PrereqCommandString="{x:Null}" CommandString="No entry required for a subdialog" dlgsyntax="No entry required for a subdialog" Helpfile="{x:Null}" splitProcessing="True" DatasetRequired="True" MenuLocation="No entry required for a subdialog" OutputDefinition="No entry required for a subdialog" Width="470" Command="False" Height="400" HelpText="{x:Null}" RHelpText="{x:Null}" Background="#FFEEEFFF" Focusable="True" x:Key="dlg"><BSkySpinnerCtrl Syntax="{x:Null}" Enabled="True" Name="rep" Text="1" Step="100" Width="83" Height="22" Left="240" Top="33" CanExecute="True" IsEnabled="True" av:Canvas.Left="240" av:Canvas.Top="33"></BSkySpinnerCtrl><BSkyLabel Name="labrep" Text="Repetitions for neural network training" Width="222" Height="28" Left="13" Top="29" CanExecute="False" FontFamily="Segoe UI" FontSize="12" MaxWidth="470" MaxHeight="300" av:Canvas.Left="13" av:Canvas.Top="29">Repetitions for neural network training</BSkyLabel><BSkyGroupBox Name="grp2" HeaderText="Multiplication factors for upper and lower learning rate" Text="{x:Null}" Width="334" Height="92" Left="8" Top="78" Header="Multiplication factors for upper and lower learning rate" Content="{x:Null}" BorderBrush="#FFA9A9A9" MaxWidth="470" MaxHeight="400" IsHitTestVisible="True" av:Canvas.Left="8" av:Canvas.Top="78" /><BSkySpinnerCtrl Syntax="{x:Null}" Enabled="True" Name="minus" Text="0.5" Step="0.1" Width="83" Height="22" Left="240" Top="105" CanExecute="True" IsEnabled="True" av:Canvas.Left="240" av:Canvas.Top="105"></BSkySpinnerCtrl><BSkyLabel Name="labupper" Text="Upper (minus)" Width="126" Height="28" Left="41" Top="102" CanExecute="False" FontFamily="Segoe UI" FontSize="12" MaxWidth="470" MaxHeight="300" av:Canvas.Left="41" av:Canvas.Top="102">Upper (minus)</BSkyLabel><BSkyLabel Name="lablower" Text="Lower (plus)" Width="112" Height="27" Left="41" Top="136" CanExecute="False" FontFamily="Segoe UI" FontSize="12" MaxWidth="470" MaxHeight="300" av:Canvas.Left="41" av:Canvas.Top="136">Lower (plus)</BSkyLabel><BSkySpinnerCtrl Syntax="{x:Null}" Enabled="True" Name="upper" Text="1.2" Step="0.1" Width="83" Height="22" Left="240" Top="137" CanExecute="True" IsEnabled="True" av:Canvas.Left="240" av:Canvas.Top="137"></BSkySpinnerCtrl><BSkyLabel Name="lablifesign" Text="Setting of how much to print during calculation of the neural net" Width="352" Height="26" Left="13" Top="193" CanExecute="False" FontFamily="Segoe UI" FontSize="12" MaxWidth="470" MaxHeight="300" av:Canvas.Left="13" av:Canvas.Top="193">Setting of how much to print during calculation of the neural net</BSkyLabel><BSkyNonEditableComboBox Name="lifesign" NothingSelected="{x:Null}" Width="83" Height="25" Left="375" Top="195" CanExecute="True" Enabled="True" Syntax="%%VALUE%%" Text="none" IsEnabled="True" av:Canvas.Left="375" av:Canvas.Top="195"><BSkyNonEditableComboBox.ComboBoxEntries><x:Null /></BSkyNonEditableComboBox.ComboBoxEntries><BSkyNonEditableComboBox.SelectionChangeBehaviour><BehaviourCollection Capacity="0" /></BSkyNonEditableComboBox.SelectionChangeBehaviour><s:String>none</s:String><s:String>minimal</s:String><s:String>full</s:String></BSkyNonEditableComboBox><BSkyLabel Name="labdifffb" Text="Differentiable function used for calculation of the error" Width="301" Height="24" Left="13" Top="261" CanExecute="False" FontFamily="Segoe UI" FontSize="12" MaxWidth="470" MaxHeight="300" av:Canvas.Left="13" av:Canvas.Top="261">Differentiable function used for calculation of the error</BSkyLabel><BSkyNonEditableComboBox Name="errfct" NothingSelected="{x:Null}" Width="83" Height="25" Left="375" Top="263" CanExecute="True" Enabled="True" Syntax="%%VALUE%%" Text="sse" IsEnabled="True" av:Canvas.Left="375" av:Canvas.Top="263"><BSkyNonEditableComboBox.ComboBoxEntries><x:Null /></BSkyNonEditableComboBox.ComboBoxEntries><BSkyNonEditableComboBox.SelectionChangeBehaviour><BehaviourCollection Capacity="0" /></BSkyNonEditableComboBox.SelectionChangeBehaviour><s:String>sse</s:String><s:String>ce</s:String></BSkyNonEditableComboBox><BSkyLabel Name="labstepsize" Text="Stepsize to print the minimal threshold in full lifesign mode" Width="322" Height="26" Left="12" Top="226" CanExecute="False" FontFamily="Segoe UI" FontSize="12" MaxWidth="470" MaxHeight="400" av:Canvas.Left="12" av:Canvas.Top="226">Stepsize to print the minimal threshold in full lifesign mode</BSkyLabel><BSkySpinnerCtrl Syntax="{x:Null}" Enabled="True" Name="lifesignstep" Text="1000" Step="1000" Width="83" Height="22" Left="375" Top="230" CanExecute="True" IsEnabled="True" av:Canvas.Left="375" av:Canvas.Top="230"></BSkySpinnerCtrl><BSkyLabel Name="linoutlab" Text="Activation function should not be applied to the output neurons" Width="351" Height="27" Left="13" Top="304" CanExecute="False" FontFamily="Segoe UI" FontSize="12" MaxWidth="470" MaxHeight="400" av:Canvas.Left="13" av:Canvas.Top="304">Activation function should not be applied to the output neurons</BSkyLabel><BSkyNonEditableComboBox Name="linearoutput" NothingSelected="{x:Null}" Width="83" Height="25" Left="375" Top="306" CanExecute="True" Enabled="True" Syntax="%%VALUE%%" Text="TRUE" IsEnabled="True" av:Canvas.Left="375" av:Canvas.Top="306"><BSkyNonEditableComboBox.ComboBoxEntries><x:Null /></BSkyNonEditableComboBox.ComboBoxEntries><BSkyNonEditableComboBox.SelectionChangeBehaviour><BehaviourCollection Capacity="0" /></BSkyNonEditableComboBox.SelectionChangeBehaviour><s:String>TRUE</s:String><s:String>FALSE</s:String></BSkyNonEditableComboBox><BSkyLabel Name="liklihoodlab" Text="Liklihood" Width="143" Height="32" Left="13" Top="344" CanExecute="False" FontFamily="Segoe UI" FontSize="12" MaxWidth="470" MaxHeight="400" av:Canvas.Left="13" av:Canvas.Top="344">Liklihood</BSkyLabel><BSkyNonEditableComboBox Name="likelihood" NothingSelected="{x:Null}" Width="83" Height="25" Left="375" Top="352" CanExecute="True" Enabled="True" Syntax="%%VALUE%%" Text="FALSE" IsEnabled="True" av:Canvas.Left="375" av:Canvas.Top="352"><BSkyNonEditableComboBox.ComboBoxEntries><x:Null /></BSkyNonEditableComboBox.ComboBoxEntries><BSkyNonEditableComboBox.SelectionChangeBehaviour><BehaviourCollection Capacity="0" /></BSkyNonEditableComboBox.SelectionChangeBehaviour><s:String>FALSE</s:String><s:String>TRUE</s:String></BSkyNonEditableComboBox></BSkyCanvas></BSkyButton.Resources>Advanced</BSkyButton><BSkyLabel Name="labDummy" Text="PLEASE DUMMY CODE FACTOR VARIABLES, SEE DATA &gt; COMPUTE DUMMY VARIABLES (KEEP ALL LEVELS" Width="578" Height="28" Left="2" Top="0" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="2" av:Canvas.Top="0">PLEASE DUMMY CODE FACTOR VARIABLES, SEE DATA &gt; COMPUTE DUMMY VARIABLES (KEEP ALL LEVELS</BSkyLabel><BSkyLabel Name="LABSC" Text="A.K.A 1 HOT ENCODING). SCALE AND CENTER NUMERIC VARIABLES, SEE DATA &gt; STANDARDIZE VARIABLES" Width="586" Height="34" Left="3" Top="19" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="3" av:Canvas.Top="19">A.K.A 1 HOT ENCODING). SCALE AND CENTER NUMERIC VARIABLES, SEE DATA &gt; STANDARDIZE VARIABLES</BSkyLabel></BSkyCanvas>