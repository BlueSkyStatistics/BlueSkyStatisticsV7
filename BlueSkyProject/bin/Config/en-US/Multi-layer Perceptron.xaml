<BSkyCanvas internalhelpfilename="{x:Null}" Title="Create and Train a Multi-layer Perceptron (MLP in RSNNS package)" ModelClasses="{x:Null}" StatusTextBoxName="{x:Null}" customsyntax="{x:Null}" EditableComboBoxName="{x:Null}" RPackages="RSNNS;NeuralNetTools" CanExecute="True" PrereqCommandString="{x:Null}" CommandString="#Setting a seed&#xA;set.seed({{seed}})&#xA;#Creating the model&#xA;&#xA;if ( class({{%DATASET%}}[, {{dependentvar}}]) == &quot;factor&quot;)&#xA;{&#xA;{{model}}&lt;-mlp( x={{%DATASET%}}[, {{independentvars}}], y=RSNNS::decodeClassLabels({{%DATASET%}}[, {{dependentvar}}]), size = {{layers}}, maxit = {{iter}},&#xA;   learnFunc = &quot;{{tf}}&quot;, learnFuncParams = c({{learnfuncparams}}))&#xA;}&#xA;else&#xA;{&#xA;{{model}}&lt;-mlp( x={{%DATASET%}}[, {{independentvars}}], y={{%DATASET%}}[, {{dependentvar}}], size = {{layers}}, maxit = {{iter}},&#xA;   learnFunc = &quot;{{tf}}&quot;, learnFuncParams = c({{learnfuncparams}}))&#xA;}&#xA;local({&#xA;#Summarizing the model&#xA;BSkyRes&lt;-summary({{model}})&#xA;&#xA;#Extracting and displaying model information&#xA;BSkyInfo&lt;-extractNetInfo({{model}})&#xA;BSkyFormat(BSkyInfo)&#xA;&#xA;#Plotting the neural net&#xA;NeuralNetTools::plotnet({{model}})&#xA;&#xA;#Setting attributes to support scoring&#xA;attr(.GlobalEnv${{model}},&quot;depvar&quot;)=&quot;{{@dependentvar}}&quot;&#xA;attr(.GlobalEnv${{model}},&quot;indepvar&quot;)=&quot;{{@independentvars}}&quot;&#xA;})&#xA;&#xA;&#xA;" dlgsyntax="#Setting a seed&#xA;set.seed({{seed}})&#xA;#Creating the model&#xA;&#xA;if ( class({{%DATASET%}}[, {{dependentvar}}]) == &quot;factor&quot;)&#xA;{&#xA;{{model}}&lt;-mlp( x={{%DATASET%}}[, {{independentvars}}], y=RSNNS::decodeClassLabels({{%DATASET%}}[, {{dependentvar}}]), size = {{layers}}, maxit = {{iter}},&#xA;   learnFunc = &quot;{{tf}}&quot;, learnFuncParams = c({{learnfuncparams}}))&#xA;}&#xA;else&#xA;{&#xA;{{model}}&lt;-mlp( x={{%DATASET%}}[, {{independentvars}}], y={{%DATASET%}}[, {{dependentvar}}], size = {{layers}}, maxit = {{iter}},&#xA;   learnFunc = &quot;{{tf}}&quot;, learnFuncParams = c({{learnfuncparams}}))&#xA;}&#xA;local({&#xA;#Summarizing the model&#xA;BSkyRes&lt;-summary({{model}})&#xA;&#xA;#Extracting and displaying model information&#xA;BSkyInfo&lt;-extractNetInfo({{model}})&#xA;BSkyFormat(BSkyInfo)&#xA;&#xA;#Plotting the neural net&#xA;NeuralNetTools::plotnet({{model}})&#xA;&#xA;#Setting attributes to support scoring&#xA;attr(.GlobalEnv${{model}},&quot;depvar&quot;)=&quot;{{@dependentvar}}&quot;&#xA;attr(.GlobalEnv${{model}},&quot;indepvar&quot;)=&quot;{{@independentvars}}&quot;&#xA;})&#xA;&#xA;&#xA;" Helpfile="{x:Null}" splitProcessing="False" DatasetRequired="True" MenuLocation="{x:Null}" OutputDefinition="" Width="580" Command="False" Height="570" HelpText="&lt;html&gt;&lt;head&gt;&lt;style type=&quot;text/css&quot;&gt;.c0 { color: Black } .c1 { margin: 0px 0px 10px } .c2 { font-weight: bold; font-size: 18.6666666666667px; line-height: 1.14999997615814; font-family: 'Arial' } .c3 { font-size: 14.6666666666667px; line-height: 1.14999997615814; font-family: 'Arial' } .c4 { margin: 0px 0px 0px 48px; line-height: 1.07; font-size: 14.6666666666667px; font-family: 'Calibri','Arial'; text-indent: -24px } .c5 { font-size: 14.6666660308838px; line-height: 1.14999997615814; font-family: 'Arial' } .c6 { font-weight: bold; font-size: 14.6666660308838px; line-height: 1.14999997615814; font-family: 'Arial' } .c7 { font-weight: bold; font-size: 16px; line-height: 1.14999997615814; font-family: 'Arial' } &lt;/style&gt;&lt;/head&gt;&lt;body class=&quot;c0&quot;&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;Multi-layer&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;#160;Perceptron&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;#160;(MLP) using the RSNNS Package&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;NOTE&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;When you specify a single dependent variable, it can be numeric or factor. If the dependent variable specified is a factor, we automatically dummy code the factor variable using one-hot Encoding using the decode function in the RSNNS package.&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&amp;#x200b;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;Additionally, if you are using one-hot encoding to dummy code a factor variable, you can specify more than one dependent variable in the dialog. In this case, the dependent variables must be of type numeric.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;You can use &amp;quot;Data &amp;gt; Compute dummy variables&amp;quot;, choose the “Keep all levels” setting to get one-hot encoding.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&amp;#x200b;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;For dependent variables of type factor, we will display a confusion matrix, ROC and model accuracy statistics when scoring a dataset using the model built. The predictions generated are of type factor since we predict the class. These will be saved in the dataset along with the predicted probabilities when scoring.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&amp;#x200b;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;When there are dummy coded dependent variables, we will not display a confusion matrix, ROC and model accuracy statistics when scoring a dataset using the model built. However, the predictions will be saved in the dataset when scoring the dataset. The predictions are the probabilities associated with the dummy coded dependent variables.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&amp;#x200b;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;It usually best to standardize independent variables (they must be numeric, too) See “Data &amp;gt; Standardize Variables.”&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;If you have categorical independent variables, use one-hot encoding to dummy code the factor variables.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;div&gt;&lt;p class=&quot;c4&quot;&gt;&amp;#x200b;&lt;/p&gt;&lt;/div&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;Description&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;This function creates a multilayer perceptron (MLP) and trains it. MLPs are fully connected feedforward networks, and probably the most common network architecture in use. Training is usually performed by error backpropagation or a related procedure.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;There are a lot of different learning functions present in SNNS that can be used together with this function, e.g., Std_Backpropagation, BackpropBatch, BackpropChunk, BackpropMomentum, BackpropWeightDecay, Rprop, Quickprop, SCG (scaled conjugate gradient), ...&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;div&gt;&amp;#x200b;&lt;/div&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;Usage&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;mlp(x, ...)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;## Default S3 method:&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;mlp(x, y, size = c(5), maxit = 100,&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;&amp;#160;&amp;#160;initFunc = &amp;quot;Randomize_Weights&amp;quot;, initFuncParams = c(-0.3, 0.3),&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;&amp;#160;&amp;#160;learnFunc = &amp;quot;Std_Backpropagation&amp;quot;, learnFuncParams = c(0.2, 0),&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;&amp;#160;&amp;#160;updateFunc = &amp;quot;Topological_Order&amp;quot;, updateFuncParams = c(0),&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;&amp;#160;&amp;#160;hiddenActFunc = &amp;quot;Act_Logistic&amp;quot;, shufflePatterns = TRUE,&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;&amp;#160;&amp;#160;linOut = FALSE, outputActFunc = if (linOut) &amp;quot;Act_Identity&amp;quot; else&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;&amp;#160;&amp;#160;&amp;quot;Act_Logistic&amp;quot;, inputsTest = NULL, targetsTest = NULL,&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;&amp;#160;&amp;#160;pruneFunc = NULL, pruneFuncParams = NULL, ...)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;Arguments&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;x:&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;a matrix with training inputs for the network&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;... :&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;additional function parameters (currently not used)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;y:&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;the corresponding targets values&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;size:&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;number of units in the hidden layer(s)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;maxit:&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;maximum of iterations to learn&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;initFunc:&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;the initialization function to use&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;initFuncParams:&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;the parameters for the initialization function&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;learnFunc:&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;the learning function to use&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;learnFuncParams:&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;the parameters for the learning function&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;updateFunc:&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;the update function to use&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;updateFuncParams:&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;the parameters for the update function&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;hiddenActFunc:&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;the activation function of all hidden units&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;shufflePatterns:&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;should the patterns be shuffled?&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;linOut:&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;sets the activation function of the output units to linear or logistic (ignored if outputActFunc is given)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;outputActFunc:&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;the activation function of all output units&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;inputsTest:&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;a matrix with inputs to test the network&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;targetsTest:&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;the corresponding targets for the test input&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;pruneFunc:&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;the pruning function to use&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;pruneFuncParams:&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;the parameters for the pruning function. Unlike the other functions, these have to be given in a named list. See the pruning demos for further explanation.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c6&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c7&quot;&gt;Details&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;Std_Backpropagation, BackpropBatch, e.g., have two parameters, the learning rate and the maximum output difference. The learning rate is usually a value between 0.1 and 1. It specifies the gradient descent step width. The maximum difference defines, how much difference between output and target value is treated as zero error, and not backpropagated. This parameter is used to prevent overtraining. For a complete list of the parameters of all the learning functions, see the SNNS User Manual, pp. 67.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&amp;#x200b;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;The defaults that are set for initialization and update functions usually don't have to be changed.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c6&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c7&quot;&gt;Value&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;an rsnns object.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c6&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;References&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;Rosenblatt, F. (1958), 'The perceptron: A probabilistic model for information storage and organization in the brain', Psychological Review 65(6), 386–408.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&amp;#x200b;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;Rumelhart, D. E.; Clelland, J. L. M. &amp;amp; Group, P. R. (1986), Parallel distributed processing :explorations in the microstructure of cognition, Mit, Cambridge, MA etc.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&amp;#x200b;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;Zell, A. et al. (1998), 'SNNS Stuttgart Neural Network Simulator User Manual, Version 4.2', IPVR, University of Stuttgart and WSI, University of T&amp;#252;bingen. http://www.ra.cs.uni-tuebingen.de/SNNS/welcome.html&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&amp;#x200b;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;Zell, A. (1994), Simulation Neuronaler Netze, Addison-Wesley. (in German)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c6&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;Examples&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;## Not run: demo(iris)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;## Not run: demo(laser)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;## Not run: demo(encoderSnnsCLib)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;data(iris)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;#shuffle the vector&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;iris &amp;lt;- iris[sample(1:nrow(iris),length(1:nrow(iris))),1:ncol(iris)]&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;irisValues &amp;lt;- iris[,1:4]&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;irisTargets &amp;lt;- decodeClassLabels(iris[,5])&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;#irisTargets &amp;lt;- decodeClassLabels(iris[,5], valTrue=0.9, valFalse=0.1)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;iris &amp;lt;- splitForTrainingAndTest(irisValues, irisTargets, ratio=0.15)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;iris &amp;lt;- normTrainingAndTestSet(iris)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;model &amp;lt;- mlp(iris$inputsTrain, iris$targetsTrain, size=5, learnFuncParams=c(0.1),&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;maxit=50, inputsTest=iris$inputsTest, targetsTest=iris$targetsTest)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;summary(model)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;model&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;weightMatrix(model)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;extractNetInfo(model)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;par(mfrow=c(2,2))&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;plotIterativeError(model)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;predictions &amp;lt;- predict(model,iris$inputsTest)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;plotRegressionError(predictions[,2], iris$targetsTest[,2])&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;confusionMatrix(iris$targetsTrain,fitted.values(model))&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;confusionMatrix(iris$targetsTest,predictions)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;plotROC(fitted.values(model)[,2], iris$targetsTrain[,2])&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;plotROC(predictions[,2], iris$targetsTest[,2])&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;#confusion matrix with 402040-method&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;confusionMatrix(iris$targetsTrain, encodeClassLabels(fitted.values(model),&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c5&quot;&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;method=&amp;quot;402040&amp;quot;, l=0.4, h=0.6))&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;" RHelpText="help(mlp)" Background="#FFFFFFFF" xmlns="clr-namespace:BSky.Controls;assembly=BSky.Controls" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib"><BSkySourceList CanExecute="True" Syntax="%%VALUE%%" summaryCtrl="False" PrefixTxt="{x:Null}" SepCharacter="{x:Null}" maxNoOfVariables="" SubstituteSettings="NoPrefix|UseComma" ordlevels="" nomlevels="" Name="src" AutoVar="False" renderVars="False" Filter="String|Numeric|Date|Logical|Ordinal|Nominal|Scale" Width="260" Height="269" Left="7.33333333333337" Top="71" Enabled="True" OverwriteSettings="{x:Null}" MoveVariables="True" SelectionMode="Extended"  AllowDrop="True" IsEnabled="True" Focusable="True" av:Canvas.Left="7.33333333333337" av:Canvas.Top="71" av:Grid.IsSharedSizeScope="True"><BSkySourceList.SelectionChangeBehaviour><BehaviourCollection Capacity="0" /></BSkySourceList.SelectionChangeBehaviour><BSkySourceList.Template><av:ControlTemplate TargetType="av:ListBox"><av:Border BorderThickness="1,1,1,1" CornerRadius="4,4,4,4" BorderBrush="#FF888888" Background="#FFFFFFFF"><av:ScrollViewer Margin="1,1,1,1" Focusable="False"><av:StackPanel IsItemsHost="True" Margin="0,0,0,0" /></av:ScrollViewer></av:Border></av:ControlTemplate></BSkySourceList.Template><BSkySourceList.Style><av:Style TargetType="av:ListBox"><av:Style.Resources><av:ResourceDictionary /></av:Style.Resources><av:Setter Property="av:UIElement.Effect"><av:Setter.Value><av:DropShadowEffect Color="#FFF5F5DC" /></av:Setter.Value></av:Setter></av:Style></BSkySourceList.Style></BSkySourceList><BSkyTargetList CanExecute="False" Syntax="%%VALUE%%" summaryCtrl="False" PrefixTxt="" SepCharacter="" maxNoOfVariables="" SubstituteSettings="NoPrefix|UseComma|Enclosed|CreateArray" ordlevels="" nomlevels="" Name="independentvars" AutoVar="True" renderVars="False" Filter="Numeric|Ordinal|Nominal|Scale" Width="258" Height="123" Left="309" Top="217" Enabled="True" OverwriteSettings="{x:Null}" MoveVariables="True" SelectionMode="Extended"  AllowDrop="True" IsEnabled="True" Focusable="True" av:Canvas.Left="309" av:Canvas.Top="217" av:Grid.IsSharedSizeScope="True"><BSkyTargetList.SelectionChangeBehaviour><BehaviourCollection Capacity="4"><Behaviour><Behaviour.Condition><Condition PropertyName="ItemsCount" Value="0" Operator="GreaterThan" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="independentvars" PropertyName="CanExecute" Value="True" /></PropertySettersCollection></Behaviour.Setters></Behaviour><Behaviour><Behaviour.Condition><Condition PropertyName="ItemsCount" Value="0" Operator="Equals" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="independentvars" PropertyName="CanExecute" Value="False" /></PropertySettersCollection></Behaviour.Setters></Behaviour></BehaviourCollection></BSkyTargetList.SelectionChangeBehaviour><BSkyTargetList.Template><av:ControlTemplate TargetType="av:ListBox"><av:Border BorderThickness="1,1,1,1" CornerRadius="4,4,4,4" BorderBrush="#FF888888" Background="#FFFFFFFF"><av:ScrollViewer Margin="1,1,1,1" Focusable="False"><av:StackPanel IsItemsHost="True" Margin="0,0,0,0" /></av:ScrollViewer></av:Border></av:ControlTemplate></BSkyTargetList.Template><BSkyTargetList.Style><av:Style TargetType="av:ListBox"><av:Style.Resources><av:ResourceDictionary /></av:Style.Resources><av:Setter Property="av:UIElement.Effect"><av:Setter.Value><av:DropShadowEffect Color="#FFF5F5DC" /></av:Setter.Value></av:Setter></av:Style></BSkyTargetList.Style></BSkyTargetList><BSkySpinnerCtrl Syntax="{x:Null}" Enabled="True" Name="iter" Text="100" Step="100" Width="83" Height="22" Left="443" Top="355" CanExecute="True" IsEnabled="True" av:Canvas.Left="443" av:Canvas.Top="355"></BSkySpinnerCtrl><BSkySpinnerCtrl Syntax="{x:Null}" Enabled="True" Name="seed" Text="12345" Step="1" Width="83" Height="22" Left="69" Top="354" CanExecute="True" IsEnabled="True" av:Canvas.Left="69" av:Canvas.Top="354"></BSkySpinnerCtrl><BSkyTargetList CanExecute="True" Syntax="%%VALUE%%" summaryCtrl="False" PrefixTxt="" SepCharacter="" maxNoOfVariables="" SubstituteSettings="NoPrefix|UseComma|Enclosed|CreateArray" ordlevels="" nomlevels="" Name="dependentvar" AutoVar="True" renderVars="False" Filter="Numeric|Ordinal|Nominal|Scale" Width="258" Height="55" Left="310" Top="130" Enabled="True" OverwriteSettings="{x:Null}" MoveVariables="True" SelectionMode="Extended"  AllowDrop="True" IsEnabled="True" Focusable="True" av:Canvas.Left="310" av:Canvas.Top="130" av:Grid.IsSharedSizeScope="True"><BSkyTargetList.SelectionChangeBehaviour><BehaviourCollection Capacity="0" /></BSkyTargetList.SelectionChangeBehaviour><BSkyTargetList.Template><av:ControlTemplate TargetType="av:ListBox"><av:Border BorderThickness="1,1,1,1" CornerRadius="4,4,4,4" BorderBrush="#FF888888" Background="#FFFFFFFF"><av:ScrollViewer Margin="1,1,1,1" Focusable="False"><av:StackPanel IsItemsHost="True" Margin="0,0,0,0" /></av:ScrollViewer></av:Border></av:ControlTemplate></BSkyTargetList.Template><BSkyTargetList.Style><av:Style TargetType="av:ListBox"><av:Style.Resources><av:ResourceDictionary /></av:Style.Resources><av:Setter Property="av:UIElement.Effect"><av:Setter.Value><av:DropShadowEffect Color="#FFF5F5DC" /></av:Setter.Value></av:Setter></av:Style></BSkyTargetList.Style></BSkyTargetList><BSkyLabel Name="srclbl" Text="Source Variables" Width="140" Height="25" Left="3.99999999999999" Top="42" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="3.99999999999999" av:Canvas.Top="42">Source Variables</BSkyLabel><BSkyLabel Name="lbl2" Text="Dependent Variable (one or more)" Width="216" Height="27" Left="305" Top="104" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="305" av:Canvas.Top="104">Dependent Variable (one or more)</BSkyLabel><BSkyLabel Name="lbl3" Text="Independent Variables (one or more)" Width="206.333333333333" Height="26.6666666666667" Left="305" Top="190" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="305" av:Canvas.Top="190">Independent Variables (one or more)</BSkyLabel><BSkyLabel Name="lbl5" Text="Learning function" Width="103.333333333333" Height="28.6666666666667" Left="3" Top="388" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="3" av:Canvas.Top="388">Learning function</BSkyLabel><BSkyVariableMoveButton Name="mov1" InputList="src" TargetList="dependentvar" Width="30" Height="30" Left="270" Top="132" Padding="1,1,1,1" Tag="To Dest" Margin="2,2,2,2" av:Canvas.Left="270" av:Canvas.Top="132"><BSkyVariableMoveButton.Effect><av:DropShadowEffect ShadowDepth="0" Color="#C89B5F00" Direction="320" Opacity="1" /></BSkyVariableMoveButton.Effect><av:Grid><av:Image Source="pack://application:,,,/BSky.Controls;component/Resources/left.png" /></av:Grid></BSkyVariableMoveButton><BSkyVariableMoveButton Name="mov2" InputList="src" TargetList="independentvars" Width="30" Height="30" Left="271" Top="216" Padding="1,1,1,1" Tag="To Dest" Margin="2,2,2,2" av:Canvas.Left="271" av:Canvas.Top="216"><BSkyVariableMoveButton.Effect><av:DropShadowEffect ShadowDepth="0" Color="#C89B5F00" Direction="320" Opacity="1" /></BSkyVariableMoveButton.Effect><av:Grid><av:Image Source="pack://application:,,,/BSky.Controls;component/Resources/left.png" /></av:Grid></BSkyVariableMoveButton><BSkyLabel Name="lab60" Text="Set Seed" Width="63.3333333333333" Height="26.3333333333333" Left="3" Top="350" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="3" av:Canvas.Top="350">Set Seed</BSkyLabel><BSkyLabelReqdField Name="rq1" Text="*" Width="27" Height="21" Left="486" Top="96" CanExecute="False" Foreground="#FFFF0000" FontFamily="Segoe UI" FontSize="12" FontWeight="Bold" av:Canvas.Left="486" av:Canvas.Top="96">*</BSkyLabelReqdField><BSkyLabelReqdField Name="rq2" Text="*" Width="15" Height="25" Left="500" Top="180" CanExecute="False" Foreground="#FFFF0000" FontFamily="Segoe UI" FontSize="12" FontWeight="Bold" av:Canvas.Left="500" av:Canvas.Top="180">*</BSkyLabelReqdField><BSkyNonEditableComboBox Name="tf" NothingSelected="{x:Null}" Width="113" Height="27" Left="110" Top="390" CanExecute="True" Enabled="True" Syntax="%%VALUE%%" Text="Std_Backpropagation" IsEnabled="True" av:Canvas.Left="110" av:Canvas.Top="390"><BSkyNonEditableComboBox.ComboBoxEntries><x:Null /></BSkyNonEditableComboBox.ComboBoxEntries><BSkyNonEditableComboBox.SelectionChangeBehaviour><BehaviourCollection Capacity="0" /></BSkyNonEditableComboBox.SelectionChangeBehaviour><s:String>Std_Backpropagation</s:String><s:String>BackpropBatch</s:String><s:String>BackpropChunk</s:String><s:String>BackpropMomentum</s:String><s:String>BackpropWeightDecay</s:String><s:String>Rprop</s:String><s:String>Quickprop</s:String><s:String>SCG</s:String></BSkyNonEditableComboBox><BSkyLabel Name="lab6" Text="The number of neurons in each hidden layer, for example" Width="322" Height="26.9999999999999" Left="14" Top="445" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="14" av:Canvas.Top="445">The number of neurons in each hidden layer, for example</BSkyLabel><BSkyLabel Name="lab7" Text="1. For 5 neurons in 1 layer, enter 5" Width="339" Height="28" Left="14" Top="464" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="14" av:Canvas.Top="464">1. For 5 neurons in 1 layer, enter 5</BSkyLabel><BSkyLabel Name="kngf" Text="2. For 5 neurons in layer 1, 6 neurons in layer 2, 7 neurons in layer 3 enter 5,6,7" Width="448" Height="27" Left="14" Top="484" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="14" av:Canvas.Top="484">2. For 5 neurons in layer 1, 6 neurons in layer 2, 7 neurons in layer 3 enter 5,6,7</BSkyLabel><BSkyTextBox PrefixTxt="c" OverWriteExistingVariables="False" AllowSpaces="True" OverwriteSettings="DontPrompt" Name="layers" Width="60" Height="30" Left="260" Top="511" SubstituteSettings="TextAsIs|PrefixByString|Brackets" CanExecute="True" Enabled="True" Syntax="%%VALUE%%" TextWrapping="Wrap" AcceptsTab="True" VerticalScrollBarVisibility="Auto" FontFamily="Segoe UI" FontSize="12" VerticalContentAlignment="Center" Template="{av:DynamicResource TextBoxBaseControlTemplate}" AllowDrop="True" IsEnabled="True" av:Canvas.Left="260" av:Canvas.Top="511"><BSkyTextBox.TextChangedBehaviour><BehaviourCollection Capacity="4"><Behaviour><Behaviour.Condition><Condition PropertyName="Text" Value="{x:Null}" Operator="isNullOrEmpty" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="layers" PropertyName="CanExecute" Value="False" /></PropertySettersCollection></Behaviour.Setters></Behaviour><Behaviour><Behaviour.Condition><Condition PropertyName="Text" Value="{x:Null}" Operator="ValidString" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="layers" PropertyName="CanExecute" Value="True" /></PropertySettersCollection></Behaviour.Setters></Behaviour></BehaviourCollection></BSkyTextBox.TextChangedBehaviour><BSkyTextBox.Style><av:Style TargetType="av:TextBox"><av:Style.Resources><av:ResourceDictionary /></av:Style.Resources><av:Setter Property="av:UIElement.Effect"><av:Setter.Value><av:DropShadowEffect Color="#FFF5F5DC" /></av:Setter.Value></av:Setter></av:Style></BSkyTextBox.Style>5</BSkyTextBox><BSkyGroupBox Name="grp1" HeaderText="No of hiddden layers and the neurons per hidden layer" Text="{x:Null}" Width="562" Height="117" Left="7" Top="428" Header="No of hiddden layers and the neurons per hidden layer" Content="{x:Null}" BorderBrush="#FFA9A9A9" IsHitTestVisible="True" av:Canvas.Left="7" av:Canvas.Top="428" /><BSkyLabel Name="lab9" Text="Specify the number of neurons in each layer" Width="243" Height="28" Left="14" Top="513" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="14" av:Canvas.Top="513">Specify the number of neurons in each layer</BSkyLabel><BSkyLabel Name="iterlab" Text="Max iterations to learn" Width="128" Height="26" Left="307" Top="350" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="307" av:Canvas.Top="350">Max iterations to learn</BSkyLabel><BSkyTextBox PrefixTxt="{x:Null}" OverWriteExistingVariables="False" AllowSpaces="False" OverwriteSettings="DontPrompt" Name="model" Width="100" Height="30" Left="310" Top="72" SubstituteSettings="TextAsIs" CanExecute="True" Enabled="True" Syntax="%%VALUE%%" TextWrapping="Wrap" AcceptsTab="True" VerticalScrollBarVisibility="Auto" FontFamily="Segoe UI" FontSize="12" VerticalContentAlignment="Center" Template="{av:DynamicResource TextBoxBaseControlTemplate}" AllowDrop="True" IsEnabled="True" av:Canvas.Left="310" av:Canvas.Top="72"><BSkyTextBox.TextChangedBehaviour><BehaviourCollection Capacity="4"><Behaviour><Behaviour.Condition><Condition PropertyName="Text" Value="{x:Null}" Operator="isNullOrEmpty" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="model" PropertyName="CanExecute" Value="False" /></PropertySettersCollection></Behaviour.Setters></Behaviour><Behaviour><Behaviour.Condition><Condition PropertyName="Text" Value="{x:Null}" Operator="ValidString" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="model" PropertyName="CanExecute" Value="True" /></PropertySettersCollection></Behaviour.Setters></Behaviour><Behaviour><Behaviour.Condition><Condition PropertyName="Text" Value="{x:Null}" Operator="IsNumeric" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="model" PropertyName="CanExecute" Value="False" /></PropertySettersCollection></Behaviour.Setters></Behaviour></BehaviourCollection></BSkyTextBox.TextChangedBehaviour><BSkyTextBox.Style><av:Style TargetType="av:TextBox"><av:Style.Resources><av:ResourceDictionary /></av:Style.Resources><av:Setter Property="av:UIElement.Effect"><av:Setter.Value><av:DropShadowEffect Color="#FFF5F5DC" /></av:Setter.Value></av:Setter></av:Style></BSkyTextBox.Style>MLP</BSkyTextBox><BSkyLabel Name="labmod" Text="Enter a model name" Width="118" Height="24" Left="305" Top="44" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="305" av:Canvas.Top="44">Enter a model name</BSkyLabel><BSkyLabelReqdField Name="jj" Text="*" Width="15" Height="25" Left="412" Top="37" CanExecute="False" Foreground="#FFFF0000" FontFamily="Segoe UI" FontSize="12" FontWeight="Bold" av:Canvas.Left="412" av:Canvas.Top="37">*</BSkyLabelReqdField><BSkyButton Name="btn" Text="Advanced" Width="60" Height="30" Left="508" Top="51" Designer="{x:Null}" CanExecute="True" Enabled="True" IsEnabled="True" av:Canvas.Left="508" av:Canvas.Top="51"><BSkyButton.ClickBehaviour><BehaviourCollection Capacity="0" /></BSkyButton.ClickBehaviour><BSkyButton.Resources><BSkyCanvas internalhelpfilename="{x:Null}" Title="{x:Null}" ModelClasses="{x:Null}" StatusTextBoxName="{x:Null}" customsyntax="{x:Null}" EditableComboBoxName="{x:Null}" RPackages="{x:Null}" CanExecute="True" PrereqCommandString="{x:Null}" CommandString="No entry required for a subdialog" dlgsyntax="No entry required for a subdialog" Helpfile="{x:Null}" splitProcessing="True" DatasetRequired="True" MenuLocation="No entry required for a subdialog" OutputDefinition="No entry required for a subdialog" Width="470" Command="False" Height="100" HelpText="{x:Null}" RHelpText="{x:Null}" Background="#FFEEEFFF" Focusable="True" x:Key="dlg"><BSkyLabel Name="labrep" Text="Learning function parameters" Width="222" Height="28" Left="13" Top="29" CanExecute="False" FontFamily="Segoe UI" FontSize="12" MaxWidth="470" MaxHeight="300" av:Canvas.Left="13" av:Canvas.Top="29">Learning function parameters</BSkyLabel><BSkyTextBox PrefixTxt="" OverWriteExistingVariables="False" AllowSpaces="False" OverwriteSettings="DontPrompt" Name="learnfuncparams" Width="100" Height="30" Left="193" Top="27" SubstituteSettings="TextAsIs" CanExecute="True" Enabled="True" Syntax="%%VALUE%%" TextWrapping="Wrap" AcceptsTab="True" VerticalScrollBarVisibility="Auto" FontFamily="Segoe UI" FontSize="12" VerticalContentAlignment="Center" Template="{av:DynamicResource TextBoxBaseControlTemplate}" AllowDrop="True" IsEnabled="True" av:Canvas.Left="193" av:Canvas.Top="27" xml:space="preserve"><BSkyTextBox.TextChangedBehaviour><BehaviourCollection Capacity="0" /></BSkyTextBox.TextChangedBehaviour><BSkyTextBox.Style><av:Style TargetType="av:TextBox"><av:Style.Resources><av:ResourceDictionary /></av:Style.Resources><av:Setter Property="av:UIElement.Effect"><av:Setter.Value><av:DropShadowEffect Color="#FFF5F5DC" /></av:Setter.Value></av:Setter></av:Style></BSkyTextBox.Style></BSkyTextBox></BSkyCanvas></BSkyButton.Resources>Advanced</BSkyButton><BSkyLabel Name="labDummy" Text="PLEASE DUMMY CODE FACTOR VARIABLES, SEE DATA &gt; COMPUTE DUMMY VARIABLES (KEEP ALL LEVELS" Width="567" Height="31" Left="2" Top="0" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="2" av:Canvas.Top="0">PLEASE DUMMY CODE FACTOR VARIABLES, SEE DATA &gt; COMPUTE DUMMY VARIABLES (KEEP ALL LEVELS</BSkyLabel><BSkyLabel Name="LABSC" Text="A.K.A 1 HOT ENCODING). SCALE AND CENTER NUMERIC VARIABLES, SEE DATA &gt; STANDARDIZE VARIABLES" Width="578" Height="30" Left="3" Top="21" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="3" av:Canvas.Top="21">A.K.A 1 HOT ENCODING). SCALE AND CENTER NUMERIC VARIABLES, SEE DATA &gt; STANDARDIZE VARIABLES</BSkyLabel></BSkyCanvas>