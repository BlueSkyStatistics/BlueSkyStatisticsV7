<BSkyCanvas internalhelpfilename="{x:Null}" Title="Impute Missing Values (Using a model)" ModelClasses="{x:Null}" StatusTextBoxName="{x:Null}" customsyntax="{x:Null}" EditableComboBoxName="{x:Null}" RPackages="simputation" CanExecute="True" PrereqCommandString="{x:Null}" CommandString="local({&#xA;packageToLoad = switch(&quot;{{modeltype}}&quot;,&#xA;&quot;impute_rlm&quot;=&quot;MASS&quot;, &quot;impute_en&quot;=&quot;glmnet&quot;, &quot;impute_cart&quot;=&quot;rpart&quot;, &quot;impute_rf&quot;=&quot;randomForest&quot;, &quot;impute_rhd&quot;=&quot;VIM&quot;, &quot;impute_shd&quot;=&quot;VIM&quot;, &quot;impute_knn&quot;=&quot;VIM&quot;, &quot;impute_mf&quot;=&quot;missForest&quot;, &quot;impute_em&quot;=&quot;norm&quot;) &#xA;&#xA;#Load required package&#xA;require(packageToLoad,character.only = TRUE)&#xA;&#xA;#Impute missing values&#xA;.GlobalEnv${{%DATASET%}} ={{modeltype}}({{%DATASET%}}, {{depVar}}~{{indepVars}})&#xA;})&#xA;#Refresh the dataset in the grid&#xA;BSkyLoadRefreshDataframe({{%DATASET%}})&#xA;" dlgsyntax="local({&#xA;packageToLoad = switch(&quot;{{modeltype}}&quot;,&#xA;&quot;impute_rlm&quot;=&quot;MASS&quot;, &quot;impute_en&quot;=&quot;glmnet&quot;, &quot;impute_cart&quot;=&quot;rpart&quot;, &quot;impute_rf&quot;=&quot;randomForest&quot;, &quot;impute_rhd&quot;=&quot;VIM&quot;, &quot;impute_shd&quot;=&quot;VIM&quot;, &quot;impute_knn&quot;=&quot;VIM&quot;, &quot;impute_mf&quot;=&quot;missForest&quot;, &quot;impute_em&quot;=&quot;norm&quot;) &#xA;&#xA;#Load required package&#xA;require(packageToLoad,character.only = TRUE)&#xA;&#xA;#Impute missing values&#xA;.GlobalEnv${{%DATASET%}} ={{modeltype}}({{%DATASET%}}, {{depVar}}~{{indepVars}})&#xA;})&#xA;#Refresh the dataset in the grid&#xA;BSkyLoadRefreshDataframe({{%DATASET%}})&#xA;" Helpfile="{x:Null}" splitProcessing="True" DatasetRequired="True" MenuLocation="{x:Null}" OutputDefinition="" Width="520" Command="False" Height="430" HelpText="&lt;html&gt;&lt;head&gt;&lt;style type=&quot;text/css&quot;&gt;.c0 { color: Black } .c1 { margin: 0px 0px 10px } .c2 { color: Black; font-family: 'Open Sans','Helvetica Neue','Helvetica','Arial','Arial'; font-size: 14px; font-style: normal; font-weight: bold; text-indent: 0px } .c3 { color: Black; font-family: 'Open Sans','Helvetica Neue','Helvetica','Arial','Arial'; font-size: 14px; font-style: normal; font-weight: normal; text-indent: 0px } .c4 { color: Black; font-family: 'Open Sans','Helvetica Neue','Helvetica','Arial','Arial'; font-size: 14px; font-style: italic; font-weight: normal; text-indent: 0px } &lt;/style&gt;&lt;/head&gt;&lt;body class=&quot;c0&quot;&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;Description&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&amp;#x200b;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;The simputation package offers a number of commonly used single imputation methods, each with a similar and hopefully simple&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;interface. At the moment the following imputation methodology is supported.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;• Model based (optionally add [non-]parametric random residual)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;• linear regression&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;• robust linear regression&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;• ridge/elasticnet/lasso regression&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;• CART models (decision trees)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;• Random forest&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;• Multivariate imputation• Imputation based on the expectation-maximization algorithm&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;• missForest (=iterative random forest imputation)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;• Donor imputation (including various donor pool specifications)• k-nearest neigbour (based on gower’s distance)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;• sequential hotdeck (LOCF, NOCB)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;• random hotdeck&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;• Predictive mean matching&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;• Other&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;(groupwise) median imputation (optional random residual)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;Proxy imputation: copy another variable or use a simple transformation to compute imputed values.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;Usage&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;A call to an imputation function has the following structure.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;impute_&amp;lt;model&amp;gt;(data, formula, [model-specific options])&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;The output is similar to the data argument, except that empty values are imputed (where possible) using the specified model.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&amp;#x200b;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;The formula argument specifies the variables to be imputed, the model specification for &amp;lt;model&amp;gt; and possibly the grouping of the dataset.&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;The structure of a formula object is as follows:&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&amp;#x200b;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;IMPUTED ~ MODEL_SPECIFICATION [ | GROUPING ]&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;where the part between [] is optional.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;See examples below and Run&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c4&quot;&gt;help(formula)&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;in the BlueSky Statistics R syntax editor to see how details on how to construct a formula.&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;In examples below dependent_var is the variable to be imputed.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;example 1(no interaction terms):&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;dependent_var ~ independent_var1 + independent_var2...&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;example 2 (with interaction terms):&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;dependent_var ~&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;independent_var1 + independent_var2&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;#160;+&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;independent_var1&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;:&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;independent_var2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;#For linear regression&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;dataset_name &amp;lt;- impute_lm(dataset_name,&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;dependent_var ~ independent_var1 + independent_var2...&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;# For robust linear regression using the model M-estimation in the package MASS&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;dataset_name &amp;lt;- impute_rlm(dataset_name, dependent_var ~ independent_var1 + independent_var2...)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;## For ridge regression using the model ridge/elasticnet/lasso in the package glmnet&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;dataset_name &amp;lt;- impute_en(dataset_name, dependent_var ~ independent_var1 + independent_var2...)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;## For CART(decision trees) using the model CART in package rpart&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;dataset_name &amp;lt;- impute_cart(dataset_name, dependent_var ~ independent_var1 + independent_var2...)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;## For RandomForest using the model random forest in package randomForest&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;dataset_name &amp;lt;- impute_rf(dataset_name, dependent_var ~ independent_var1 + independent_var2...)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;##For Multivariate Imputation based on the expectation-maximization algorithm in package norm&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;dataset_name &amp;lt;- impute_em(dataset_name, dependent_var ~ independent_var1 + independent_var2...)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;##For Multivariate Imputation based on missForest (=iterative random forest imputation) in the package missForest&amp;#160;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;dataset_name &amp;lt;- impute_mf(dataset_name, dependent_var ~ independent_var1 + independent_var2...)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;##Donor imputation (including various donor pool specifications), k-nearest neighbor (based on gower’s distance) in VIM package&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;dataset_name &amp;lt;- impute_knn(dataset_name, dependent_var ~ independent_var1 + independent_var2...)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;##Donor imputation (including various donor pool specifications), sequential hot deck (LOCF, NOCB) in VIM package&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;dataset_name &amp;lt;- impute_shd(dataset_name, dependent_var ~ independent_var1 + independent_var2...)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;##Donor imputation (including various donor pool specifications), random hot deck in VIM package&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;dataset_name &amp;lt;- impute_rhd(dataset_name, dependent_var ~ independent_var1 + independent_var2...)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;Package&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;simputation and other packages based on the imputation method selected. See above&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;Help&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;help(impute_lm, package='simputation')&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;Useful URLs&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;https://cran.r-project.org/web/packages/simputation/vignettes/intro.html&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;" RHelpText="help(impute_lm, package='simputation')" Background="#FFFFFFFF" xmlns="clr-namespace:BSky.Controls;assembly=BSky.Controls" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib"><BSkySourceList CanExecute="True" Syntax="%%VALUE%%" summaryCtrl="False" PrefixTxt="{x:Null}" SepCharacter="{x:Null}" maxNoOfVariables="" SubstituteSettings="NoPrefix|UseComma" ordlevels="" nomlevels="" Name="src" AutoVar="False" renderVars="False" Filter="String|Numeric|Date|Logical|Ordinal|Nominal|Scale" Width="193" Height="380" Left="6" Top="32" Enabled="True" OverwriteSettings="{x:Null}" MoveVariables="True" SelectionMode="Extended"  AllowDrop="True" IsEnabled="True" Focusable="True" av:Canvas.Left="6" av:Canvas.Top="32" av:Grid.IsSharedSizeScope="True"><BSkySourceList.SelectionChangeBehaviour><BehaviourCollection Capacity="0" /></BSkySourceList.SelectionChangeBehaviour><BSkySourceList.Template><av:ControlTemplate TargetType="av:ListBox"><av:Border BorderThickness="1,1,1,1" CornerRadius="4,4,4,4" BorderBrush="#FF888888" Background="#FFFFFFFF"><av:ScrollViewer Margin="1,1,1,1" Focusable="False"><av:StackPanel IsItemsHost="True" Margin="0,0,0,0" /></av:ScrollViewer></av:Border></av:ControlTemplate></BSkySourceList.Template><BSkySourceList.Style><av:Style TargetType="av:ListBox"><av:Style.Resources><av:ResourceDictionary /></av:Style.Resources><av:Setter Property="av:UIElement.Effect"><av:Setter.Value><av:DropShadowEffect Color="#FFF5F5DC" /></av:Setter.Value></av:Setter></av:Style></BSkySourceList.Style></BSkySourceList><BSkyGroupingVariable Name="depVar" Width="135" Height="30" Left="242" Top="50" Filter="String|Numeric|Date|Logical|Ordinal|Nominal|Scale" CanExecute="False" SubstituteSettings="NoPrefix|UseComma" Enabled="True" PrefixTxt="{x:Null}" SepCharacter="{x:Null}" nomlevels="{x:Null}" ordlevels="{x:Null}" Syntax="%%VALUE%%" IsEnabled="True" av:Canvas.Left="242" av:Canvas.Top="50"><BSkyGroupingVariable.SelectionChangeBehaviour><BehaviourCollection Capacity="4"><Behaviour><Behaviour.Condition><Condition PropertyName="ItemsCount" Value="0" Operator="GreaterThan" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="depVar" PropertyName="CanExecute" Value="True" /></PropertySettersCollection></Behaviour.Setters></Behaviour><Behaviour><Behaviour.Condition><Condition PropertyName="ItemsCount" Value="0" Operator="Equals" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="depVar" PropertyName="CanExecute" Value="False" /></PropertySettersCollection></Behaviour.Setters></Behaviour></BehaviourCollection></BSkyGroupingVariable.SelectionChangeBehaviour><SingleItemList CanExecute="False" summaryCtrl="False" PrefixTxt="{x:Null}" SepCharacter="{x:Null}" maxNoOfVariables="" SubstituteSettings="NoPrefix|UseComma" ordlevels="{x:Null}" nomlevels="{x:Null}" AutoVar="True" renderVars="False" Filter="String|Numeric|Date|Logical|Ordinal|Nominal|Scale" Left="NaN" Top="NaN" Enabled="True" OverwriteSettings="{x:Null}" MoveVariables="True" SelectionMode="Extended"  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" AllowDrop="True" Focusable="True" av:Grid.IsSharedSizeScope="True"><SingleItemList.SelectionChangeBehaviour><BehaviourCollection Capacity="4"><Behaviour><Behaviour.Condition><Condition PropertyName="ItemsCount" Value="0" Operator="GreaterThan" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="depVar" PropertyName="CanExecute" Value="True" /></PropertySettersCollection></Behaviour.Setters></Behaviour><Behaviour><Behaviour.Condition><Condition PropertyName="ItemsCount" Value="0" Operator="Equals" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="depVar" PropertyName="CanExecute" Value="False" /></PropertySettersCollection></Behaviour.Setters></Behaviour></BehaviourCollection></SingleItemList.SelectionChangeBehaviour><SingleItemList.Template><av:ControlTemplate TargetType="av:ListBox"><av:Border BorderThickness="1,1,1,1" CornerRadius="4,4,4,4" BorderBrush="#FF888888" Background="#FFFFFFFF"><av:ScrollViewer Margin="1,1,1,1" Focusable="False"><av:StackPanel IsItemsHost="True" Margin="0,0,0,0" /></av:ScrollViewer></av:Border></av:ControlTemplate></SingleItemList.Template><SingleItemList.Style><av:Style TargetType="av:ListBox"><av:Style.Resources><av:ResourceDictionary /></av:Style.Resources><av:Setter Property="av:UIElement.Effect"><av:Setter.Value><av:DropShadowEffect Color="#FFF5F5DC" /></av:Setter.Value></av:Setter></av:Style></SingleItemList.Style></SingleItemList></BSkyGroupingVariable><BSkyTextBox PrefixTxt="{x:Null}" OverWriteExistingVariables="False" AllowSpaces="True" OverwriteSettings="DontPrompt" Name="indepVars" Width="265" Height="42" Left="246" Top="237" SubstituteSettings="TextAsIs" CanExecute="False" Enabled="True" Syntax="%%VALUE%%" TextWrapping="Wrap" AcceptsTab="True" VerticalScrollBarVisibility="Auto" FontFamily="Segoe UI" FontSize="12" VerticalContentAlignment="Center" Template="{av:DynamicResource TextBoxBaseControlTemplate}" AllowDrop="True" IsEnabled="True" av:Canvas.Left="246" av:Canvas.Top="237" xml:space="preserve"><BSkyTextBox.TextChangedBehaviour><BehaviourCollection Capacity="4"><Behaviour><Behaviour.Condition><Condition PropertyName="Text" Value="{x:Null}" Operator="isNullOrEmpty" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="indepVars" PropertyName="CanExecute" Value="False" /></PropertySettersCollection></Behaviour.Setters></Behaviour><Behaviour><Behaviour.Condition><Condition PropertyName="Text" Value="{x:Null}" Operator="ValidString" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="indepVars" PropertyName="CanExecute" Value="True" /></PropertySettersCollection></Behaviour.Setters></Behaviour></BehaviourCollection></BSkyTextBox.TextChangedBehaviour><BSkyTextBox.Style><av:Style TargetType="av:TextBox"><av:Style.Resources><av:ResourceDictionary /></av:Style.Resources><av:Setter Property="av:UIElement.Effect"><av:Setter.Value><av:DropShadowEffect Color="#FFF5F5DC" /></av:Setter.Value></av:Setter></av:Style></BSkyTextBox.Style></BSkyTextBox><BSkyLabel Name="label1" Text="Source Variables" Width="104" Height="25" Left="2" Top="4" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="2" av:Canvas.Top="4">Source Variables</BSkyLabel><BSkyLabel Name="label2" Text="Select a variable to impute missing values for" Width="263" Height="27" Left="235" Top="6" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="235" av:Canvas.Top="6">Select a variable to impute missing values for</BSkyLabel><BSkyVariableMoveButton Name="move" InputList="src" TargetList="depVar" Width="30" Height="30" Left="203" Top="49" Padding="1,1,1,1" Tag="To Dest" Margin="2,2,2,2" av:Canvas.Left="203" av:Canvas.Top="49"><BSkyVariableMoveButton.Effect><av:DropShadowEffect ShadowDepth="0" Color="#C89B5F00" Direction="320" Opacity="1" /></BSkyVariableMoveButton.Effect><av:Grid><av:Image Source="pack://application:,,,/BSky.Controls;component/Resources/left.png" /></av:Grid></BSkyVariableMoveButton><BSkyVariableMoveButton Name="move2" InputList="src" TargetList="indepVars" Width="30" Height="30" Left="203" Top="155" Padding="1,1,1,1" Tag="To Dest" Margin="2,2,2,2" av:Canvas.Left="203" av:Canvas.Top="155"><BSkyVariableMoveButton.Effect><av:DropShadowEffect ShadowDepth="0" Color="#C89B5F00" Direction="320" Opacity="1" /></BSkyVariableMoveButton.Effect><av:Grid><av:Image Source="pack://application:,,,/BSky.Controls;component/Resources/left.png" /></av:Grid></BSkyVariableMoveButton><BSkyGroupBox Name="grp1" HeaderText="Formula builder for independent variables" Text="{x:Null}" Width="279" Height="194" Left="241" Top="94" Header="Formula builder for independent variables" Content="{x:Null}" BorderBrush="#FFA9A9A9" IsHitTestVisible="True" av:Canvas.Left="241" av:Canvas.Top="94" /><BSkyNonEditableComboBox Name="modeltype" NothingSelected="{x:Null}" Width="100" Height="25" Left="239" Top="328" CanExecute="True" Enabled="True" Syntax="%%VALUE%%" Text="impute_rlm" IsEnabled="True" av:Canvas.Left="239" av:Canvas.Top="328"><BSkyNonEditableComboBox.ComboBoxEntries><x:Null /></BSkyNonEditableComboBox.ComboBoxEntries><BSkyNonEditableComboBox.SelectionChangeBehaviour><BehaviourCollection Capacity="0" /></BSkyNonEditableComboBox.SelectionChangeBehaviour><s:String>impute_rlm</s:String><s:String>impute_en</s:String><s:String>impute_cart</s:String><s:String>impute_rf</s:String><s:String>impute_rhd</s:String><s:String>impute_shd</s:String><s:String>impute_knn</s:String><s:String>impute_mf</s:String><s:String>impute_em</s:String></BSkyNonEditableComboBox><BSkyLabel Name="labvv" Text="Select the type of model used to impute  missing" Width="270" Height="26" Left="236" Top="286" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="236" av:Canvas.Top="286" xml:space="preserve">Select the type of model used to impute  missing</BSkyLabel><BSkyTextBox PrefixTxt="{x:Null}" OverWriteExistingVariables="False" AllowSpaces="True" OverwriteSettings="DontPrompt" Name="sssss" Width="135" Height="30" Left="238" Top="382" SubstituteSettings="TextAsIs" CanExecute="True" Enabled="True" Syntax="%%VALUE%%" TextWrapping="Wrap" AcceptsTab="True" VerticalScrollBarVisibility="Auto" FontFamily="Segoe UI" FontSize="12" VerticalContentAlignment="Center" Template="{av:DynamicResource TextBoxBaseControlTemplate}" AllowDrop="True" IsEnabled="True" av:Canvas.Left="238" av:Canvas.Top="382" xml:space="preserve"><BSkyTextBox.TextChangedBehaviour><BehaviourCollection Capacity="0" /></BSkyTextBox.TextChangedBehaviour><BSkyTextBox.Style><av:Style TargetType="av:TextBox"><av:Style.Resources><av:ResourceDictionary /></av:Style.Resources><av:Setter Property="av:UIElement.Effect"><av:Setter.Value><av:DropShadowEffect Color="#FFF5F5DC" /></av:Setter.Value></av:Setter></av:Style></BSkyTextBox.Style></BSkyTextBox><BSkyLabel Name="labfd" Text="Note: This is the dependent variable in the model." Width="276" Height="27" Left="235" Top="23" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="235" av:Canvas.Top="23">Note: This is the dependent variable in the model.</BSkyLabel><BSkyLabel Name="labrr" Text="Specify model parameters" Width="187" Height="27" Left="234" Top="353" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="234" av:Canvas.Top="353">Specify model parameters</BSkyLabel><BSkyLabel Name="labnn" Text="values" Width="50" Height="25" Left="235" Top="302" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="235" av:Canvas.Top="302">values</BSkyLabel><BSkygridForSymbols name="formula" Width="Auto" Height="Auto" Left="247" Top="208" textBoxName="indepVars" CanExecute="True" Name="formula" av:Canvas.Left="247" av:Canvas.Top="208"><FormulaButton Name="Button1" Width="25" Height="25" HorizontalAlignment="Left" VerticalAlignment="Top">+</FormulaButton><FormulaButton Name="Button2" Width="25" Height="25" Margin="25,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Top">*</FormulaButton><FormulaButton Name="Button3" Width="25" Height="25" Margin="50,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Top">:</FormulaButton><FormulaButton Name="Button4" Width="25" Height="25" Margin="75,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Top">/</FormulaButton><FormulaButton Name="Button5" Width="40" Height="25" Margin="100,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Top">%in%</FormulaButton><FormulaButton Name="Button6" Width="25" Height="25" Margin="140,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Top">-</FormulaButton><FormulaButton Name="Button7" Width="25" Height="25" Margin="165,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Top">^</FormulaButton><FormulaButton Name="Button8" Width="25" Height="25" Margin="190,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Top">(</FormulaButton><FormulaButton Name="Button9" Width="25" Height="25" Margin="215,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Top">)</FormulaButton><FormulaButton Name="Button10" Width="25" Height="25" Margin="240,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Top">|</FormulaButton></BSkygridForSymbols><BSkyMultiLineLabel Name="dsssa" Width="263" Height="85" Left="247" Top="115" CanExecute="True" TextWrapping="Wrap" AcceptsTab="True" VerticalScrollBarVisibility="Auto" FontFamily="Segoe UI" FontSize="12" VerticalContentAlignment="Top" Template="{av:DynamicResource TextBoxControlTemplateMultiline}" av:Canvas.Left="247" av:Canvas.Top="115"><BSkyMultiLineLabel.Style><av:Style TargetType="av:TextBox"><av:Style.Resources><av:ResourceDictionary /></av:Style.Resources><av:Setter Property="av:UIElement.Effect"><av:Setter.Value><av:DropShadowEffect Color="#FFF5F5DC" /></av:Setter.Value></av:Setter></av:Style></BSkyMultiLineLabel.Style>Moving multiple variables with the move button uses a default separator of +, indicating independent variables without interaction terms. Click on the symbol to build a model with interaction terms.</BSkyMultiLineLabel><BSkyLabelReqdField Name="rq1" Text="*" Width="15" Height="25" Left="478" Top="3" CanExecute="False" Foreground="#FFFF0000" FontFamily="Segoe UI" FontSize="12" FontWeight="Bold" av:Canvas.Left="478" av:Canvas.Top="3">*</BSkyLabelReqdField><BSkyLabelReqdField Name="rq2" Text="*" Width="15" Height="25" Left="339" Top="174" CanExecute="False" Foreground="#FFFF0000" FontFamily="Segoe UI" FontSize="12" FontWeight="Bold" av:Canvas.Left="339" av:Canvas.Top="174">*</BSkyLabelReqdField></BSkyCanvas>