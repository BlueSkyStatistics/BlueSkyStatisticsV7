<BSkyCanvas internalhelpfilename="One Sample T Test_1.pdf" Title="Chisq Test" ModelClasses="{assembly:Null}" StatusTextBoxName="{assembly:Null}" customsyntax="{assembly:Null}" EditableComboBoxName="{assembly:Null}" RPackages="{assembly:Null}" CanExecute="True" PrereqCommandString="{assembly:Null}" CommandString="local(&#xA;{&#xA;vars =c({{target}})&#xA;propToTest =c({{proportions}})&#xA;if (sum(propToTest) !=1)&#xA;{&#xA;print(&quot;Sum of all the proportions must =1&quot;)&#xA;stop()&#xA;}&#xA;for(variable in vars)&#xA;{&#xA;if (length(propToTest) !=with({{%DATASET%}},length(levels(eval(parse(text =paste(variable)))))))&#xA;{&#xA;print(paste(&quot;You must enter a proportion for each level of factor variable &quot;,variable))&#xA;stop()&#xA;}&#xA;eval( parse (text =paste( variable, &quot;=&quot;, &quot;with ({{%DATASET%}},table(&quot;, variable, &quot; ) )     &quot;)))&#xA;&#xA;#x = chisq.test(get(variable), p=propToTest)&#xA;eval ( parse(text = paste ( &quot;x = chisq.test(&quot; , variable, &quot;, p=propToTest)&quot;)))&#xA;&#xA;y= x[1:5]&#xA;class(y) = class(x)&#xA;z = cbind(Observed = x$observed, Expected = x$expected, Residuals=x$residuals)&#xA;row.names(z) = names(x$observed)&#xA;#BSkyFormat(paste(&quot;Results for variable &quot;,variable) )&#xA;BSkyFormat(z,singleTableOutputHeader =paste(&quot;Frequencies for variable&quot;, variable) )&#xA;BSkyFormat(y)&#xA;BSkyFormat(&quot;\n&quot;)&#xA;&#xA;}&#xA;}&#xA;)" dlgsyntax="local(&#xA;{&#xA;vars =c({{target}})&#xA;propToTest =c({{proportions}})&#xA;if (sum(propToTest) !=1)&#xA;{&#xA;print(&quot;Sum of all the proportions must =1&quot;)&#xA;stop()&#xA;}&#xA;for(variable in vars)&#xA;{&#xA;if (length(propToTest) !=with({{%DATASET%}},length(levels(eval(parse(text =paste(variable)))))))&#xA;{&#xA;print(paste(&quot;You must enter a proportion for each level of factor variable &quot;,variable))&#xA;stop()&#xA;}&#xA;eval( parse (text =paste( variable, &quot;=&quot;, &quot;with ({{%DATASET%}},table(&quot;, variable, &quot; ) )     &quot;)))&#xA;&#xA;#x = chisq.test(get(variable), p=propToTest)&#xA;eval ( parse(text = paste ( &quot;x = chisq.test(&quot; , variable, &quot;, p=propToTest)&quot;)))&#xA;&#xA;y= x[1:5]&#xA;class(y) = class(x)&#xA;z = cbind(Observed = x$observed, Expected = x$expected, Residuals=x$residuals)&#xA;row.names(z) = names(x$observed)&#xA;#BSkyFormat(paste(&quot;Results for variable &quot;,variable) )&#xA;BSkyFormat(z,singleTableOutputHeader =paste(&quot;Frequencies for variable&quot;, variable) )&#xA;BSkyFormat(y)&#xA;BSkyFormat(&quot;\n&quot;)&#xA;&#xA;}&#xA;}&#xA;)" Helpfile="" splitProcessing="True" DatasetRequired="True" MenuLocation="{assembly:Null}" OutputDefinition="" Width="500" Command="False" Height="340" HelpText="&lt;html&gt;&lt;head&gt;&lt;style type=&quot;text/css&quot;&gt;.c0 { color: Black } .c1 { margin: 0px 0px 10px } .c2 { margin: 0px 0px 11px; font-size: 12px; font-weight: bold } .c3 { font-family: 'Courier New'; font-size: 12px } .c4 { font-size: 12px } .c5 { vertical-align: middle } .c6 { vertical-align: top } .c7 { margin: 0px 0px 12px } .c8 { font-style: italic; font-size: 12px } .c9 { font-weight: bold; font-family: 'Courier New','Courier'; color: #666666; font-size: 12px } &lt;/style&gt;&lt;/head&gt;&lt;body class=&quot;c0&quot;&gt;&lt;p class=&quot;c1&quot;&gt;&amp;#x200b;&lt;/p&gt;&lt;div&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;Description&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;chisq.test&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;performs chi-squared contingency table tests and goodness-of-fit tests.&lt;/span&gt;&lt;/p&gt;&lt;div&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;Usage&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;chisq.test(x, y = NULL, correct = TRUE,&lt;br/&gt; &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;p = rep(1/length(x), length(x)), rescale.p = FALSE,&lt;br/&gt; &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;simulate.p.value = FALSE, B = 2000)&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;Arguments&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;table&gt;&lt;col/&gt;&lt;col/&gt;&lt;col/&gt;&lt;tbody class=&quot;c5&quot;&gt;&lt;tr class=&quot;c6&quot;&gt;&lt;td class=&quot;c6&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;x&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td class=&quot;c6&quot;&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#x200b;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c6&quot;&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c4&quot;&gt;a numeric vector or matrix.&amp;#160;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;x&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;and&amp;#160;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;y&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;can also both be factors.&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c6&quot;&gt;&lt;td class=&quot;c6&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;y&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td class=&quot;c6&quot;&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c6&quot;&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c4&quot;&gt;a numeric vector; ignored if&amp;#160;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;x&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;is a matrix. If&amp;#160;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;x&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;is a factor,&amp;#160;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;y&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;should be a factor of the same length.&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c6&quot;&gt;&lt;td class=&quot;c6&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;correct&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td class=&quot;c6&quot;&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c6&quot;&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c4&quot;&gt;a logical indicating whether to apply continuity correction when computing the test statistic for 2 by 2 tables: one half is subtracted from all&amp;#160;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c8&quot;&gt;|O - E|&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;differences; however, the correction will not be bigger than the differences themselves. No correction is done if&amp;#160;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;simulate.p.value = TRUE&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c6&quot;&gt;&lt;td class=&quot;c6&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;p&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td class=&quot;c6&quot;&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c6&quot;&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c4&quot;&gt;a vector of probabilities of the same length of&amp;#160;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;x&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;. An error is given if any entry of&amp;#160;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;p&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;is negative.&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c6&quot;&gt;&lt;td class=&quot;c6&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;rescale.p&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td class=&quot;c6&quot;&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c6&quot;&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c4&quot;&gt;a logical scalar; if TRUE then&amp;#160;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;p&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;is rescaled (if necessary) to sum to 1. If&amp;#160;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;rescale.p&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;is FALSE, and&amp;#160;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;p&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;does not sum to 1, an error is given.&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c6&quot;&gt;&lt;td class=&quot;c6&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;simulate.p.value&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td class=&quot;c6&quot;&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c6&quot;&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c4&quot;&gt;a logical indicating whether to compute p-values by Monte Carlo simulation.&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c6&quot;&gt;&lt;td class=&quot;c6&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td class=&quot;c6&quot;&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c6&quot;&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c4&quot;&gt;an integer specifying the number of replicates used in the Monte Carlo test.&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;div&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;Details&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c4&quot;&gt;If&amp;#160;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;x&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;is a matrix with one row or column, or if&amp;#160;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;x&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;is a vector and&amp;#160;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;y&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;is not given, then a&amp;#160;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c8&quot;&gt;goodness-of-fit test&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;is performed (&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;x&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;is treated as a one-dimensional contingency table). The entries of&amp;#160;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;x&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;must be non-negative integers. In this case, the hypothesis tested is whether the population probabilities equal those in&amp;#160;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;p&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;, or are all equal if&amp;#160;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;p&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;is not given.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c4&quot;&gt;If&amp;#160;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;x&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;is a matrix with at least two rows and columns, it is taken as a two-dimensional contingency table: the entries of&amp;#160;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;x&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;must be non-negative integers. Otherwise,&amp;#160;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;x&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;and&amp;#160;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;y&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;must be vectors or factors of the same length; cases with missing values are removed, the objects are coerced to factors, and the contingency table is computed from these. Then Pearson's chi-squared test is performed of the null hypothesis that the joint distribution of the cell counts in a 2-dimensional contingency table is the product of the row and column marginals.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c4&quot;&gt;If&amp;#160;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;simulate.p.value&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;is&amp;#160;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;FALSE&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;, the p-value is computed from the asymptotic chi-squared distribution of the test statistic; continuity correction is only used in the 2-by-2 case (if&amp;#160;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;correct&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;is&amp;#160;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;TRUE&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;, the default). Otherwise the p-value is computed for a Monte Carlo test (Hope, 1968) with&amp;#160;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;replicates.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c4&quot;&gt;In the contingency table case simulation is done by random sampling from the set of all contingency tables with given marginals, and works only if the marginals are strictly positive. Continuity correction is never used, and the statistic is quoted without it. Note that this is not the usual sampling situation assumed for the chi-squared test but rather that for Fisher's exact test.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c4&quot;&gt;In the goodness-of-fit case simulation is done by random sampling from the discrete distribution specified by&amp;#160;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;p&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;, each sample being of size&amp;#160;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;n = sum(x)&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;. This simulation is done in&amp;#160;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c9&quot;&gt;R&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;and may be slow.&lt;/span&gt;&lt;/p&gt;&lt;div&gt;&lt;span&gt;&lt;span class=&quot;c2&quot;&gt;Value&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c4&quot;&gt;A list with class&amp;#160;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;quot;htest&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;containing the following components:&lt;/span&gt;&lt;/p&gt;&lt;table&gt;&lt;col/&gt;&lt;col/&gt;&lt;tbody class=&quot;c5&quot;&gt;&lt;tr class=&quot;c6&quot;&gt;&lt;td class=&quot;c6&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;statistic&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td class=&quot;c6&quot;&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c4&quot;&gt;the value the chi-squared test statistic.&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c6&quot;&gt;&lt;td class=&quot;c6&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;parameter&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td class=&quot;c6&quot;&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c4&quot;&gt;the degrees of freedom of the approximate chi-squared distribution of the test statistic,&amp;#160;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;NA&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;if the p-value is computed by Monte Carlo simulation.&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c6&quot;&gt;&lt;td class=&quot;c6&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;p.value&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td class=&quot;c6&quot;&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c4&quot;&gt;the p-value for the test.&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c6&quot;&gt;&lt;td class=&quot;c6&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;method&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td class=&quot;c6&quot;&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c4&quot;&gt;a character string indicating the type of test performed, and whether Monte Carlo simulation or continuity correction was used.&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c6&quot;&gt;&lt;td class=&quot;c6&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;data.name&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td class=&quot;c6&quot;&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c4&quot;&gt;a character string giving the name(s) of the data.&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c6&quot;&gt;&lt;td class=&quot;c6&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;observed&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td class=&quot;c6&quot;&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c4&quot;&gt;the observed counts.&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c6&quot;&gt;&lt;td class=&quot;c6&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;expected&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td class=&quot;c6&quot;&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c4&quot;&gt;the expected counts under the null hypothesis.&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c6&quot;&gt;&lt;td class=&quot;c6&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;residuals&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td class=&quot;c6&quot;&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c4&quot;&gt;the Pearson residuals,&amp;#160;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;(observed - expected) / sqrt(expected)&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c6&quot;&gt;&lt;td class=&quot;c6&quot;&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;stdres&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td class=&quot;c6&quot;&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c4&quot;&gt;standardized residuals,&amp;#160;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;(observed - expected) / sqrt(V)&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;, where&amp;#160;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;V&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;is the residual cell variance (Agresti, 2007, section 2.4.5 for the case where&amp;#160;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;x&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;is a matrix,&amp;#160;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;n * p * (1 - p)&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#160;otherwise).&amp;#x200b;&amp;#x200b;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c5&quot;&gt;&lt;td class=&quot;c6&quot;&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/p&gt;&lt;div&gt;&lt;span&gt;&lt;span class=&quot;c3&quot;&gt;## From Agresti(2007) p.39&lt;br/&gt;M &amp;lt;- as.table(rbind(c(762, 327, 468), c(484, 239, 477)))&lt;br/&gt;dimnames(M) &amp;lt;- list(gender = c(&amp;quot;F&amp;quot;, &amp;quot;M&amp;quot;),&lt;br/&gt; &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;party = c(&amp;quot;Democrat&amp;quot;,&amp;quot;Independent&amp;quot;, &amp;quot;Republican&amp;quot;))&lt;br/&gt;(Xsq &amp;lt;- chisq.test(M)) &amp;#160;# Prints test summary&lt;br/&gt;Xsq$observed &amp;#160;&amp;#160;# observed counts (same as M)&lt;br/&gt;Xsq$expected &amp;#160;&amp;#160;# expected counts under the null&lt;br/&gt;Xsq$residuals &amp;#160;# Pearson residuals&lt;br/&gt;Xsq$stdres &amp;#160;&amp;#160;&amp;#160;&amp;#160;# standardized residuals&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;## Effect of simulating p-values&lt;br/&gt;x &amp;lt;- matrix(c(12, 5, 7, 7), ncol = 2)&lt;br/&gt;chisq.test(x)$p.value &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;# 0.4233&lt;br/&gt;chisq.test(x, simulate.p.value = TRUE, B = 10000)$p.value&lt;br/&gt; &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;# around 0.29!&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;#x200b;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c6&quot;&gt;&lt;p class=&quot;c1&quot;&gt;&amp;#x200b;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/body&gt;&lt;/html&gt;" RHelpText="help(chisq.test, package=stats)" Background="#FFFFFFFF" xmlns="clr-namespace:BSky.Controls;assembly=BSky.Controls" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation"><BSkySourceList CanExecute="True" Syntax="%%VALUE%%" summaryCtrl="False" PrefixTxt="{assembly:Null}" SepCharacter="{assembly:Null}" maxNoOfVariables="" SubstituteSettings="NoPrefix|UseComma" ordlevels="" nomlevels="" Name="source" AutoVar="False" renderVars="False" Filter="String|Numeric|Date|Ordinal|Nominal|Scale" Width="177" Height="300" Left="5" Top="27" Enabled="True" OverwriteSettings="{assembly:Null}" MoveVariables="True" SelectionMode="Extended"  AllowDrop="True" IsEnabled="True" Focusable="True" av:Canvas.Left="5" av:Canvas.Top="27" av:Grid.IsSharedSizeScope="True"><BSkySourceList.SelectionChangeBehaviour><BehaviourCollection Capacity="0" /></BSkySourceList.SelectionChangeBehaviour><BSkySourceList.Template><av:ControlTemplate TargetType="av:ListBox"><av:Border BorderThickness="1,1,1,1" CornerRadius="4,4,4,4" BorderBrush="#FF888888" Background="#FFFFFFFF"><av:ScrollViewer Margin="1,1,1,1" Focusable="False"><av:StackPanel IsItemsHost="True" Margin="0,0,0,0" /></av:ScrollViewer></av:Border></av:ControlTemplate></BSkySourceList.Template><BSkySourceList.Style><av:Style TargetType="av:ListBox"><av:Style.Resources><av:ResourceDictionary /></av:Style.Resources><av:Setter Property="av:UIElement.Effect"><av:Setter.Value><av:DropShadowEffect Color="#FFF5F5DC" /></av:Setter.Value></av:Setter></av:Style></BSkySourceList.Style></BSkySourceList><BSkyTargetList CanExecute="False" Syntax="%%VALUE%%" summaryCtrl="False" PrefixTxt="{assembly:Null}" SepCharacter="{assembly:Null}" maxNoOfVariables="" SubstituteSettings="NoPrefix|UseComma|Enclosed" ordlevels="" nomlevels="" Name="target" AutoVar="True" renderVars="False" Filter="Numeric|Ordinal|Nominal" Width="200" Height="165" Left="226" Top="27" Enabled="True" OverwriteSettings="{assembly:Null}" MoveVariables="True" SelectionMode="Extended"  AllowDrop="True" IsEnabled="True" Focusable="True" av:Canvas.Left="226" av:Canvas.Top="27" av:Grid.IsSharedSizeScope="True"><BSkyTargetList.SelectionChangeBehaviour><BehaviourCollection Capacity="4"><Behaviour><Behaviour.Condition><Condition PropertyName="ItemsCount" Value="0" Operator="Equals" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="target" PropertyName="CanExecute" Value="false" /></PropertySettersCollection></Behaviour.Setters></Behaviour><Behaviour><Behaviour.Condition><Condition PropertyName="ItemsCount" Value="0" Operator="GreaterThan" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="target" PropertyName="CanExecute" Value="true" /></PropertySettersCollection></Behaviour.Setters></Behaviour></BehaviourCollection></BSkyTargetList.SelectionChangeBehaviour><BSkyTargetList.Template><av:ControlTemplate TargetType="av:ListBox"><av:Border BorderThickness="1,1,1,1" CornerRadius="4,4,4,4" BorderBrush="#FF888888" Background="#FFFFFFFF"><av:ScrollViewer Margin="1,1,1,1" Focusable="False"><av:StackPanel IsItemsHost="True" Margin="0,0,0,0" /></av:ScrollViewer></av:Border></av:ControlTemplate></BSkyTargetList.Template><BSkyTargetList.Style><av:Style TargetType="av:ListBox"><av:Style.Resources><av:ResourceDictionary /></av:Style.Resources><av:Setter Property="av:UIElement.Effect"><av:Setter.Value><av:DropShadowEffect Color="#FFF5F5DC" /></av:Setter.Value></av:Setter></av:Style></BSkyTargetList.Style></BSkyTargetList><BSkyVariableMoveButton Name="movebutton" InputList="source" TargetList="target" Width="30" Height="30" Left="187" Top="27" Padding="1,1,1,1" Tag="To Dest" Margin="2,2,2,2" av:Canvas.Left="187" av:Canvas.Top="27"><BSkyVariableMoveButton.Effect><av:DropShadowEffect ShadowDepth="0" Color="#C89B5F00" Direction="320" Opacity="1" /></BSkyVariableMoveButton.Effect><av:Grid><av:Image Source="pack://application:,,,/BSky.Controls;component/Resources/left.png" /></av:Grid></BSkyVariableMoveButton><BSkyTextBox PrefixTxt="" OverWriteExistingVariables="False" AllowSpaces="True" OverwriteSettings="DontPrompt" Name="proportions" Width="200" Height="30" Left="226" Top="298" SubstituteSettings="TextAsIs" CanExecute="False" Enabled="True" Syntax="%%VALUE%%" TextWrapping="Wrap" AcceptsTab="True" VerticalScrollBarVisibility="Auto" FontFamily="Segoe UI" FontSize="12" VerticalContentAlignment="Center" Template="{av:DynamicResource TextBoxBaseControlTemplate}" AllowDrop="True" IsEnabled="True" av:Canvas.Left="226" av:Canvas.Top="298" xml:space="preserve"><BSkyTextBox.TextChangedBehaviour><BehaviourCollection Capacity="4"><Behaviour><Behaviour.Condition><Condition PropertyName="Text" Value="{assembly:Null}" Operator="isNullOrEmpty" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="proportions" PropertyName="CanExecute" Value="false" /></PropertySettersCollection></Behaviour.Setters></Behaviour><Behaviour><Behaviour.Condition><Condition PropertyName="Text" Value="{assembly:Null}" Operator="ValidString" /></Behaviour.Condition><Behaviour.Setters><PropertySettersCollection Capacity="4"><PropertySetter ControlName="proportions" PropertyName="CanExecute" Value="true" /></PropertySettersCollection></Behaviour.Setters></Behaviour></BehaviourCollection></BSkyTextBox.TextChangedBehaviour><BSkyTextBox.Style><av:Style TargetType="av:TextBox"><av:Style.Resources><av:ResourceDictionary /></av:Style.Resources><av:Setter Property="av:UIElement.Effect"><av:Setter.Value><av:DropShadowEffect Color="#FFF5F5DC" /></av:Setter.Value></av:Setter></av:Style></BSkyTextBox.Style></BSkyTextBox><BSkyLabel Name="srclbl" Text="If your variable is gender, enter 0.5,0.5 to test" Width="249" Height="27" Left="222" Top="218" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="222" av:Canvas.Top="218">If your variable is gender, enter 0.5,0.5 to test</BSkyLabel><BSkyLabel Name="sellbl" Text="Selected Variables" Width="134" Height="24" Left="222" Top="3" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="222" av:Canvas.Top="3">Selected Variables</BSkyLabel><BSkyLabel Name="tstval" Text="Enter proportions to test against." Width="189" Height="27" Left="222" Top="202" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="222" av:Canvas.Top="202">Enter proportions to test against.</BSkyLabel><BSkyLabel Name="sourceVar" Text="Source Variables" Width="110" Height="25" Left="1" Top="3" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="1" av:Canvas.Top="3">Source Variables</BSkyLabel><BSkyLabel Name="label3" Text=" for equal proportions or 0.2,.0.8 to  test for 20% " Width="278" Height="24" Left="218" Top="235" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="218" av:Canvas.Top="235" xml:space="preserve"> for equal proportions or 0.2,.0.8 to  test for 20% </BSkyLabel><BSkyLabel Name="label6" Text="males, 80% females. Enter a proportion for every " Width="271" Height="29" Left="222" Top="252" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="222" av:Canvas.Top="252" xml:space="preserve">males, 80% females. Enter a proportion for every </BSkyLabel><BSkyLabel Name="label5" Text="level. Proportions must total to 1." Width="195" Height="25" Left="222" Top="269" CanExecute="False" FontFamily="Segoe UI" FontSize="12" av:Canvas.Left="222" av:Canvas.Top="269">level. Proportions must total to 1.</BSkyLabel><BSkyLabelReqdField Name="rq1" Text="*" Width="15" Height="25" Left="320" Top="0" CanExecute="False" Foreground="#FFFF0000" FontFamily="Segoe UI" FontSize="12" FontWeight="Bold" av:Canvas.Left="320" av:Canvas.Top="0">*</BSkyLabelReqdField><BSkyLabelReqdField Name="rq2" Text="*" Width="15" Height="25" Left="402" Top="266" CanExecute="False" Foreground="#FFFF0000" FontFamily="Segoe UI" FontSize="12" FontWeight="Bold" av:Canvas.Left="402" av:Canvas.Top="266">*</BSkyLabelReqdField></BSkyCanvas>